
AVRASM ver. 2.1.30  D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm Fri Mar 22 21:25:49 2013

D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1057): warning: Register r5 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1058): warning: Register r4 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1059): warning: Register r7 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1060): warning: Register r6 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1061): warning: Register r9 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1062): warning: Register r8 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1063): warning: Register r11 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1064): warning: Register r10 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1065): warning: Register r13 already defined by the .DEF directive
D:\DONE WORK\Timer Relay\Program\TimerRelay\List\Timer Relay.asm(1066): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8535
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 128 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 607
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0080
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _jam=R5
                 	.DEF _menit=R4
                 	.DEF _detik=R7
                 	.DEF _x=R6
                 	.DEF _tanggal=R9
                 	.DEF _bulan=R8
                 	.DEF _tahun=R11
                 	.DEF __lcd_x=R10
                 	.DEF __lcd_y=R13
                 	.DEF __lcd_maxx=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c0eb      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
                 
                 _tbl10_G100:
000015 2710
000016 03e8
000017 0064
000018 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000019 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00001a 1000
00001b 0100
00001c 0010
00001d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001e 6553
00001f 2074
000020 6954
000021 656d      	.DB  0x53,0x65,0x74,0x20,0x54,0x69,0x6D,0x65
000022 2072
000023 6542
000024 6162
000025 316e      	.DB  0x72,0x20,0x42,0x65,0x62,0x61,0x6E,0x31
000026 5300
000027 7465
000028 5420
000029 6d69      	.DB  0x0,0x53,0x65,0x74,0x20,0x54,0x69,0x6D
00002a 7265
00002b 4f20
00002c 206e
00002d 2020      	.DB  0x65,0x72,0x20,0x4F,0x6E,0x20,0x20,0x20
00002e 0020
00002f 6425
000030 5300
000031 7465      	.DB  0x20,0x0,0x25,0x64,0x0,0x53,0x65,0x74
000032 5420
000033 6d69
000034 7265
000035 4f20      	.DB  0x20,0x54,0x69,0x6D,0x65,0x72,0x20,0x4F
000036 6666
000037 2020
000038 0020
000039 6553      	.DB  0x66,0x66,0x20,0x20,0x20,0x0,0x53,0x65
00003a 7474
00003b 6e69
00003c 2067
00003d 6946      	.DB  0x74,0x74,0x69,0x6E,0x67,0x20,0x46,0x69
00003e 696e
00003f 6873
000040 2020
000041 5300      	.DB  0x6E,0x69,0x73,0x68,0x20,0x20,0x0,0x53
000042 7465
000043 5420
000044 6d69
000045 7265      	.DB  0x65,0x74,0x20,0x54,0x69,0x6D,0x65,0x72
000046 4220
000047 6265
000048 6e61
000049 0032      	.DB  0x20,0x42,0x65,0x62,0x61,0x6E,0x32,0x0
00004a 6553
00004b 2074
00004c 6954
00004d 656d      	.DB  0x53,0x65,0x74,0x20,0x54,0x69,0x6D,0x65
00004e 2072
00004f 6542
000050 6162
000051 336e      	.DB  0x72,0x20,0x42,0x65,0x62,0x61,0x6E,0x33
000052 5300
000053 7465
000054 5420
000055 6d69      	.DB  0x0,0x53,0x65,0x74,0x20,0x54,0x69,0x6D
000056 7265
000057 4220
000058 6265
000059 6e61      	.DB  0x65,0x72,0x20,0x42,0x65,0x62,0x61,0x6E
00005a 0034
00005b 3454
00005c 4f20
00005d 206e      	.DB  0x34,0x0,0x54,0x34,0x20,0x4F,0x6E,0x20
00005e 3e20
00005f 2520
000060 6432
000061 253a      	.DB  0x20,0x3E,0x20,0x25,0x32,0x64,0x3A,0x25
000062 6432
000063 0020
000064 3454
000065 4f20      	.DB  0x32,0x64,0x20,0x0,0x54,0x34,0x20,0x4F
000066 6666
000067 3e20
000068 2520
000069 6432      	.DB  0x66,0x66,0x20,0x3E,0x20,0x25,0x32,0x64
00006a 253a
00006b 6432
00006c 0020
00006d 3354      	.DB  0x3A,0x25,0x32,0x64,0x20,0x0,0x54,0x33
00006e 4f20
00006f 206e
000070 3e20
000071 2520      	.DB  0x20,0x4F,0x6E,0x20,0x20,0x3E,0x20,0x25
000072 6432
000073 253a
000074 6432
000075 0020      	.DB  0x32,0x64,0x3A,0x25,0x32,0x64,0x20,0x0
000076 3354
000077 4f20
000078 6666
000079 3e20      	.DB  0x54,0x33,0x20,0x4F,0x66,0x66,0x20,0x3E
00007a 2520
00007b 6432
00007c 253a
00007d 6432      	.DB  0x20,0x25,0x32,0x64,0x3A,0x25,0x32,0x64
00007e 0020
00007f 3254
000080 4f20
000081 206e      	.DB  0x20,0x0,0x54,0x32,0x20,0x4F,0x6E,0x20
000082 3e20
000083 2520
000084 6432
000085 253a      	.DB  0x20,0x3E,0x20,0x25,0x32,0x64,0x3A,0x25
000086 6432
000087 0020
000088 3254
000089 4f20      	.DB  0x32,0x64,0x20,0x0,0x54,0x32,0x20,0x4F
00008a 6666
00008b 3e20
00008c 2520
00008d 6432      	.DB  0x66,0x66,0x20,0x3E,0x20,0x25,0x32,0x64
00008e 253a
00008f 6432
000090 0020
000091 3154      	.DB  0x3A,0x25,0x32,0x64,0x20,0x0,0x54,0x31
000092 4f20
000093 206e
000094 3e20
000095 2520      	.DB  0x20,0x4F,0x6E,0x20,0x20,0x3E,0x20,0x25
000096 6432
000097 253a
000098 6432
000099 0020      	.DB  0x32,0x64,0x3A,0x25,0x32,0x64,0x20,0x0
00009a 3154
00009b 4f20
00009c 6666
00009d 3e20      	.DB  0x54,0x31,0x20,0x4F,0x66,0x66,0x20,0x3E
00009e 2520
00009f 6432
0000a0 253a
0000a1 6432      	.DB  0x20,0x25,0x32,0x64,0x3A,0x25,0x32,0x64
0000a2 0020
0000a3 614a
0000a4 206d
0000a5 3e3d      	.DB  0x20,0x0,0x4A,0x61,0x6D,0x20,0x3D,0x3E
0000a6 2520
0000a7 6432
0000a8 253a
0000a9 6432      	.DB  0x20,0x25,0x32,0x64,0x3A,0x25,0x32,0x64
0000aa 253a
0000ab 6432
0000ac 0020
0000ad 6754      	.DB  0x3A,0x25,0x32,0x64,0x20,0x0,0x54,0x67
0000ae 206c
0000af 3e3d
0000b0 2520
0000b1 6432      	.DB  0x6C,0x20,0x3D,0x3E,0x20,0x25,0x32,0x64
0000b2 252f
0000b3 6432
0000b4 252f
0000b5 6432      	.DB  0x2F,0x25,0x32,0x64,0x2F,0x25,0x32,0x64
0000b6 0020      	.DB  0x20,0x0
                 _0x2040003:
0000b7 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0000b8 0011      	.DW  0x11
0000b9 00e0      	.DW  _0x49
0000ba 003c      	.DW  _0x0*2
                 
0000bb 0011      	.DW  0x11
0000bc 00f1      	.DW  _0x49+17
0000bd 004d      	.DW  _0x0*2+17
                 
0000be 0011      	.DW  0x11
0000bf 0102      	.DW  _0x49+34
0000c0 0061      	.DW  _0x0*2+37
                 
0000c1 0011      	.DW  0x11
0000c2 0113      	.DW  _0x49+51
0000c3 0072      	.DW  _0x0*2+54
                 
0000c4 0011      	.DW  0x11
0000c5 0124      	.DW  _0x4D
0000c6 0083      	.DW  _0x0*2+71
                 
0000c7 0011      	.DW  0x11
0000c8 0135      	.DW  _0x4D+17
0000c9 004d      	.DW  _0x0*2+17
                 
0000ca 0011      	.DW  0x11
0000cb 0146      	.DW  _0x4D+34
0000cc 0061      	.DW  _0x0*2+37
                 
0000cd 0011      	.DW  0x11
0000ce 0157      	.DW  _0x4D+51
0000cf 0072      	.DW  _0x0*2+54
                 
0000d0 0011      	.DW  0x11
0000d1 0168      	.DW  _0x51
0000d2 0094      	.DW  _0x0*2+88
                 
0000d3 0011      	.DW  0x11
0000d4 0179      	.DW  _0x51+17
0000d5 004d      	.DW  _0x0*2+17
                 
0000d6 0011      	.DW  0x11
0000d7 018a      	.DW  _0x51+34
0000d8 0061      	.DW  _0x0*2+37
                 
0000d9 0011      	.DW  0x11
0000da 019b      	.DW  _0x51+51
0000db 0072      	.DW  _0x0*2+54
                 
0000dc 0011      	.DW  0x11
0000dd 01ac      	.DW  _0x55
0000de 00a5      	.DW  _0x0*2+105
                 
0000df 0011      	.DW  0x11
0000e0 01bd      	.DW  _0x55+17
0000e1 004d      	.DW  _0x0*2+17
                 
0000e2 0011      	.DW  0x11
0000e3 01ce      	.DW  _0x55+34
0000e4 0061      	.DW  _0x0*2+37
                 
0000e5 0011      	.DW  0x11
0000e6 01df      	.DW  _0x55+51
0000e7 0072      	.DW  _0x0*2+54
                 
0000e8 0002      	.DW  0x02
0000e9 0230      	.DW  __base_y_G102
0000ea 016e      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
0000eb 0000      	.DW  0
                 
                 __RESET:
0000ec 94f8      	CLI
0000ed 27ee      	CLR  R30
0000ee bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000ef e0f1      	LDI  R31,1
0000f0 bffb      	OUT  GICR,R31
0000f1 bfeb      	OUT  GICR,R30
0000f2 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000f3 e1f8      	LDI  R31,0x18
0000f4 bdf1      	OUT  WDTCR,R31
0000f5 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000f6 e08d      	LDI  R24,(14-2)+1
0000f7 e0a2      	LDI  R26,2
0000f8 27bb      	CLR  R27
                 __CLEAR_REG:
0000f9 93ed      	ST   X+,R30
0000fa 958a      	DEC  R24
0000fb f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000fc e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000fd e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000fe e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000ff 93ed      	ST   X+,R30
000100 9701      	SBIW R24,1
000101 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000102 e7e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000103 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000104 9185      	LPM  R24,Z+
000105 9195      	LPM  R25,Z+
000106 9700      	SBIW R24,0
000107 f061      	BREQ __GLOBAL_INI_END
000108 91a5      	LPM  R26,Z+
000109 91b5      	LPM  R27,Z+
00010a 9005      	LPM  R0,Z+
00010b 9015      	LPM  R1,Z+
00010c 01bf      	MOVW R22,R30
00010d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00010e 9005      	LPM  R0,Z+
00010f 920d      	ST   X+,R0
000110 9701      	SBIW R24,1
000111 f7e1      	BRNE __GLOBAL_INI_LOOP
000112 01fb      	MOVW R30,R22
000113 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000114 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000115 bfed      	OUT  SPL,R30
000116 e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000117 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000118 eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000119 e0d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00011a c231      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;PROSEDUR PENGGUNAAN
                 ;SECARA DEFAULT TAMPILAN LCD AKAN MENAMPILKAN JAM DAN TANGGAL
                 ;UNTUK MELAKUKAN PENGATURAN WAKTU NYALA/MATI SETIAP BEBAN DAPAT MENEKAN TOMBOL PUSHBUTTON
                 ;SETELAH TOMBOL DITEKAN ANDA AKAN DIMINTA UNTUK MEMASUKKAN WAKTU ON DAN WAKTU OFF MELALUI KEYPAD
                 ;PADA SAAT DI LCD MUNCUL TULISAN TIMER ON KETIK JAM YANG AKAN DIMASUKKAN KE SETTINGAN
                 ;FORMAT DATA YANG DIMASUKKAN ADALAH SEBAGAI BERIKUT
                 ;CONTOH :
                 ;08*15
                 ;KEMUDIAN DIAKHIRI DENGAN MENEKAN #
                 ;FORMAT JAM ADALAH 24 JAM
                 ;SETINGAN JAM AKAN OTOMATIS DIMASUKKAN KE EEPROM
                 ;ANDA BISA MELIHAT SETTINGAN NYALA/MATI SETIAP BEBAN DENGAN MENEKAN HURUF 'A' 'B' 'C' ATAU 'D' PADA KEYPAD, PADA SAAT LCD MENAMPILKAN JAM DAN TANGGAL
                 ;*****************************************************/
                 ;
                 ;#include <mega8535.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;// I2C Bus functions
                 ;#asm
                    .equ __i2c_port=0x15 ;PORTC
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0019 #endasm
                 ;#include <i2c.h>
                 ;
                 ;// DS1307 Real Time Clock functions
                 ;#include <ds1307.h>
                 ;
                 ;// Alphanumeric LCD Module functions
                 ;#include <alcd.h>
                 ;
                 ;#define  SW_BEBAN1   PINB.0
                 ;#define  SW_BEBAN2   PINB.1
                 ;#define  SW_BEBAN3   PINB.2
                 ;#define  SW_BEBAN4   PINB.3
                 ;
                 ;#define  BEBAN1      PORTC.4
                 ;#define  BEBAN2      PORTC.5
                 ;#define  BEBAN3      PORTC.6
                 ;#define  BEBAN4      PORTC.7
                 ;
                 ;#define  DDR_KEYPAD  DDRD
                 ;#define  KEYPAD_OUT  PORTD
                 ;#define  KEYPAD_IN   PIND
                 ;
                 ;unsigned char jam, menit, detik;
                 ;unsigned char x, tanggal, bulan, tahun;
                 ;
                 ;unsigned char jamTimerOn[4], menitTimerOn[4], jamTimerOff[4], menitTimerOff[4];
                 ;eeprom unsigned char _jamTimerOn[4], _menitTimerOn[4], _jamTimerOff[4], _menitTimerOff[4];
                 ;
                 ;char dataKeypad[16];
                 ;char bufferLcd1[16], bufferLcd2[16];
                 ;
                 ;void bacaRTC() {
                 ; 0000 0039 void bacaRTC() {
                 
                 	.CSEG
                 _bacaRTC:
                 ; 0000 003A    rtc_get_time(&jam,&menit,&detik);
00011b e0e5      	LDI  R30,LOW(5)
00011c e0f0      	LDI  R31,HIGH(5)
00011d d75f      	RCALL SUBOPT_0x0
00011e e0e4      	LDI  R30,LOW(4)
00011f e0f0      	LDI  R31,HIGH(4)
000120 d75c      	RCALL SUBOPT_0x0
000121 e0e7      	LDI  R30,LOW(7)
000122 e0f0      	LDI  R31,HIGH(7)
000123 d759      	RCALL SUBOPT_0x0
000124 d653      	RCALL _rtc_get_time
                 ; 0000 003B    rtc_get_date(&x,&tanggal,&bulan,&tahun);
000125 e0e6      	LDI  R30,LOW(6)
000126 e0f0      	LDI  R31,HIGH(6)
000127 d755      	RCALL SUBOPT_0x0
000128 e0e9      	LDI  R30,LOW(9)
000129 e0f0      	LDI  R31,HIGH(9)
00012a d752      	RCALL SUBOPT_0x0
00012b e0e8      	LDI  R30,LOW(8)
00012c e0f0      	LDI  R31,HIGH(8)
00012d d74f      	RCALL SUBOPT_0x0
00012e e0eb      	LDI  R30,LOW(11)
00012f e0f0      	LDI  R31,HIGH(11)
000130 d74c      	RCALL SUBOPT_0x0
000131 d65b      	RCALL _rtc_get_date
                 ; 0000 003C }
000132 9508      	RET
                 ;
                 ;void clearDataKeypad() {
                 ; 0000 003E void clearDataKeypad() {
                 _clearDataKeypad:
                 ; 0000 003F    int i;
                 ; 0000 0040    for(i=0;i<16;i++) {
000133 d97d      	RCALL __SAVELOCR2
                 ;	i -> R16,R17
000134 d74b      	RCALL SUBOPT_0x1
                 _0x4:
                +
000135 3100     +CPI R16 , LOW ( 16 )
000136 e0e0     +LDI R30 , HIGH ( 16 )
000137 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
000138 f42c      	BRGE _0x5
                 ; 0000 0041       dataKeypad[i]=0;
000139 e0a0      	LDI  R26,LOW(_dataKeypad)
00013a e0b2      	LDI  R27,HIGH(_dataKeypad)
00013b d747      	RCALL SUBOPT_0x2
                 ; 0000 0042    }
00013c d74b      	RCALL SUBOPT_0x3
00013d cff7      	RJMP _0x4
                 _0x5:
                 ; 0000 0043 }
00013e d97c      	RCALL __LOADLOCR2P
00013f 9508      	RET
                 ;
                 ;void scanKeypad(char limiter, int display, unsigned char startX, unsigned char startY) {
                 ; 0000 0045 void scanKeypad(char limiter, int display, unsigned char startX, unsigned char startY) {
                 _scanKeypad:
000140 92ff      	PUSH R15
                 ; 0000 0046    unsigned char counter=0;
                 ; 0000 0047    bit selesai = 0;
                 ; 0000 0048    clearDataKeypad();
000141 931a      	ST   -Y,R17
                 ;	limiter -> Y+5
                 ;	display -> Y+3
                 ;	startX -> Y+2
                 ;	startY -> Y+1
                 ;	counter -> R17
                 ;	selesai -> R15.0
000142 24ff      	CLR  R15
000143 e010      	LDI  R17,0
000144 dfee      	RCALL _clearDataKeypad
                 ; 0000 0049    while(!selesai) {
                 _0x6:
000145 fcf0      	SBRC R15,0
000146 c10e      	RJMP _0x8
                 ; 0000 004A       lcd_gotoxy(startX,startY);
000147 d743      	RCALL SUBOPT_0x4
000148 d742      	RCALL SUBOPT_0x4
000149 d68d      	RCALL _lcd_gotoxy
                 ; 0000 004B       KEYPAD_OUT=0b01111111;
00014a e7ef      	LDI  R30,LOW(127)
00014b d742      	RCALL SUBOPT_0x5
                 ; 0000 004C       delay_ms(30);
                 ; 0000 004D       if(KEYPAD_IN.0==0) {
00014c 9980      	SBIC 0x10,0
00014d c00e      	RJMP _0x9
                 ; 0000 004E          if(limiter=='*') {
00014e 81ad      	LDD  R26,Y+5
00014f 32aa      	CPI  R26,LOW(0x2A)
000150 f411      	BRNE _0xA
                 ; 0000 004F             selesai = 1;
000151 d741      	RCALL SUBOPT_0x6
                 ; 0000 0050          }
                 ; 0000 0051          else {
000152 c008      	RJMP _0xB
                 _0xA:
                 ; 0000 0052             dataKeypad[counter]='*';
000153 d742      	RCALL SUBOPT_0x7
000154 e2aa      	LDI  R26,LOW(42)
000155 d745      	RCALL SUBOPT_0x8
                 ; 0000 0053             if(display) {
000156 f019      	BREQ _0xC
                 ; 0000 0054                lcd_gotoxy(counter+startX,startY);
000157 d748      	RCALL SUBOPT_0x9
000158 d74b      	RCALL SUBOPT_0xA
                 ; 0000 0055                lcd_putchar(dataKeypad[counter]);
000159 d74c      	RCALL SUBOPT_0xB
                 ; 0000 0056             }
                 ; 0000 0057             counter++;
                 _0xC:
00015a 5f1f      	SUBI R17,-1
                 ; 0000 0058          }
                 _0xB:
                 ; 0000 0059          delay_ms(200);
00015b d74d      	RCALL SUBOPT_0xC
                 ; 0000 005A       }
                 ; 0000 005B       if(KEYPAD_IN.1==0) {
                 _0x9:
00015c 9981      	SBIC 0x10,1
00015d c00e      	RJMP _0xD
                 ; 0000 005C          if(limiter=='7') {
00015e 81ad      	LDD  R26,Y+5
00015f 33a7      	CPI  R26,LOW(0x37)
000160 f411      	BRNE _0xE
                 ; 0000 005D             selesai = 1;
000161 d731      	RCALL SUBOPT_0x6
                 ; 0000 005E          }
                 ; 0000 005F          else {
000162 c008      	RJMP _0xF
                 _0xE:
                 ; 0000 0060             dataKeypad[counter]='7';
000163 d732      	RCALL SUBOPT_0x7
000164 e3a7      	LDI  R26,LOW(55)
000165 d735      	RCALL SUBOPT_0x8
                 ; 0000 0061             if(display) {
000166 f019      	BREQ _0x10
                 ; 0000 0062                lcd_gotoxy(counter+startX,startY);
000167 d738      	RCALL SUBOPT_0x9
000168 d73b      	RCALL SUBOPT_0xA
                 ; 0000 0063                lcd_putchar(dataKeypad[counter]);
000169 d73c      	RCALL SUBOPT_0xB
                 ; 0000 0064             }
                 ; 0000 0065             counter++;
                 _0x10:
00016a 5f1f      	SUBI R17,-1
                 ; 0000 0066          }
                 _0xF:
                 ; 0000 0067          delay_ms(200);
00016b d73d      	RCALL SUBOPT_0xC
                 ; 0000 0068       }
                 ; 0000 0069       if(KEYPAD_IN.2==0) {
                 _0xD:
00016c 9982      	SBIC 0x10,2
00016d c00e      	RJMP _0x11
                 ; 0000 006A          if(limiter=='4') {
00016e 81ad      	LDD  R26,Y+5
00016f 33a4      	CPI  R26,LOW(0x34)
000170 f411      	BRNE _0x12
                 ; 0000 006B             selesai = 1;
000171 d721      	RCALL SUBOPT_0x6
                 ; 0000 006C          }
                 ; 0000 006D          else {
000172 c008      	RJMP _0x13
                 _0x12:
                 ; 0000 006E             dataKeypad[counter]='4';
000173 d722      	RCALL SUBOPT_0x7
000174 e3a4      	LDI  R26,LOW(52)
000175 d725      	RCALL SUBOPT_0x8
                 ; 0000 006F             if(display) {
000176 f019      	BREQ _0x14
                 ; 0000 0070                lcd_gotoxy(counter+startX,startY);
000177 d728      	RCALL SUBOPT_0x9
000178 d72b      	RCALL SUBOPT_0xA
                 ; 0000 0071                lcd_putchar(dataKeypad[counter]);
000179 d72c      	RCALL SUBOPT_0xB
                 ; 0000 0072             }
                 ; 0000 0073             counter++;
                 _0x14:
00017a 5f1f      	SUBI R17,-1
                 ; 0000 0074          }
                 _0x13:
                 ; 0000 0075          delay_ms(200);
00017b d72d      	RCALL SUBOPT_0xC
                 ; 0000 0076       }
                 ; 0000 0077       if(KEYPAD_IN.3==0) {
                 _0x11:
00017c 9983      	SBIC 0x10,3
00017d c00e      	RJMP _0x15
                 ; 0000 0078          if(limiter=='1') {
00017e 81ad      	LDD  R26,Y+5
00017f 33a1      	CPI  R26,LOW(0x31)
000180 f411      	BRNE _0x16
                 ; 0000 0079             selesai = 1;
000181 d711      	RCALL SUBOPT_0x6
                 ; 0000 007A          }
                 ; 0000 007B          else {
000182 c008      	RJMP _0x17
                 _0x16:
                 ; 0000 007C             dataKeypad[counter]='1';
000183 d712      	RCALL SUBOPT_0x7
000184 e3a1      	LDI  R26,LOW(49)
000185 d715      	RCALL SUBOPT_0x8
                 ; 0000 007D             if(display) {
000186 f019      	BREQ _0x18
                 ; 0000 007E                lcd_gotoxy(counter+startX,startY);
000187 d718      	RCALL SUBOPT_0x9
000188 d71b      	RCALL SUBOPT_0xA
                 ; 0000 007F                lcd_putchar(dataKeypad[counter]);
000189 d71c      	RCALL SUBOPT_0xB
                 ; 0000 0080             }
                 ; 0000 0081             counter++;
                 _0x18:
00018a 5f1f      	SUBI R17,-1
                 ; 0000 0082          }
                 _0x17:
                 ; 0000 0083          delay_ms(200);
00018b d71d      	RCALL SUBOPT_0xC
                 ; 0000 0084       }
                 ; 0000 0085       KEYPAD_OUT=0b10111111;
                 _0x15:
00018c ebef      	LDI  R30,LOW(191)
00018d d700      	RCALL SUBOPT_0x5
                 ; 0000 0086       delay_ms(30);
                 ; 0000 0087       if(KEYPAD_IN.0==0) {
00018e 9980      	SBIC 0x10,0
00018f c00e      	RJMP _0x19
                 ; 0000 0088          if(limiter=='0') {
000190 81ad      	LDD  R26,Y+5
000191 33a0      	CPI  R26,LOW(0x30)
000192 f411      	BRNE _0x1A
                 ; 0000 0089             selesai = 1;
000193 d6ff      	RCALL SUBOPT_0x6
                 ; 0000 008A          }
                 ; 0000 008B          else {
000194 c008      	RJMP _0x1B
                 _0x1A:
                 ; 0000 008C             dataKeypad[counter]='0';
000195 d700      	RCALL SUBOPT_0x7
000196 e3a0      	LDI  R26,LOW(48)
000197 d703      	RCALL SUBOPT_0x8
                 ; 0000 008D             if(display) {
000198 f019      	BREQ _0x1C
                 ; 0000 008E                lcd_gotoxy(counter+startX,startY);
000199 d706      	RCALL SUBOPT_0x9
00019a d709      	RCALL SUBOPT_0xA
                 ; 0000 008F                lcd_putchar(dataKeypad[counter]);
00019b d70a      	RCALL SUBOPT_0xB
                 ; 0000 0090             }
                 ; 0000 0091             counter++;
                 _0x1C:
00019c 5f1f      	SUBI R17,-1
                 ; 0000 0092          }
                 _0x1B:
                 ; 0000 0093          delay_ms(200);
00019d d70b      	RCALL SUBOPT_0xC
                 ; 0000 0094       }
                 ; 0000 0095       if(KEYPAD_IN.1==0) {
                 _0x19:
00019e 9981      	SBIC 0x10,1
00019f c00e      	RJMP _0x1D
                 ; 0000 0096          if(limiter=='8') {
0001a0 81ad      	LDD  R26,Y+5
0001a1 33a8      	CPI  R26,LOW(0x38)
0001a2 f411      	BRNE _0x1E
                 ; 0000 0097             selesai = 1;
0001a3 d6ef      	RCALL SUBOPT_0x6
                 ; 0000 0098          }
                 ; 0000 0099          else {
0001a4 c008      	RJMP _0x1F
                 _0x1E:
                 ; 0000 009A             dataKeypad[counter]='8';
0001a5 d6f0      	RCALL SUBOPT_0x7
0001a6 e3a8      	LDI  R26,LOW(56)
0001a7 d6f3      	RCALL SUBOPT_0x8
                 ; 0000 009B             if(display) {
0001a8 f019      	BREQ _0x20
                 ; 0000 009C                lcd_gotoxy(counter+startX,startY);
0001a9 d6f6      	RCALL SUBOPT_0x9
0001aa d6f9      	RCALL SUBOPT_0xA
                 ; 0000 009D                lcd_putchar(dataKeypad[counter]);
0001ab d6fa      	RCALL SUBOPT_0xB
                 ; 0000 009E             }
                 ; 0000 009F             counter++;
                 _0x20:
0001ac 5f1f      	SUBI R17,-1
                 ; 0000 00A0          }
                 _0x1F:
                 ; 0000 00A1          delay_ms(200);
0001ad d6fb      	RCALL SUBOPT_0xC
                 ; 0000 00A2       }
                 ; 0000 00A3       if(KEYPAD_IN.2==0) {
                 _0x1D:
0001ae 9982      	SBIC 0x10,2
0001af c00e      	RJMP _0x21
                 ; 0000 00A4          if(limiter=='5') {
0001b0 81ad      	LDD  R26,Y+5
0001b1 33a5      	CPI  R26,LOW(0x35)
0001b2 f411      	BRNE _0x22
                 ; 0000 00A5             selesai = 1;
0001b3 d6df      	RCALL SUBOPT_0x6
                 ; 0000 00A6          }
                 ; 0000 00A7          else {
0001b4 c008      	RJMP _0x23
                 _0x22:
                 ; 0000 00A8             dataKeypad[counter]='5';
0001b5 d6e0      	RCALL SUBOPT_0x7
0001b6 e3a5      	LDI  R26,LOW(53)
0001b7 d6e3      	RCALL SUBOPT_0x8
                 ; 0000 00A9             if(display) {
0001b8 f019      	BREQ _0x24
                 ; 0000 00AA                lcd_gotoxy(counter+startX,startY);
0001b9 d6e6      	RCALL SUBOPT_0x9
0001ba d6e9      	RCALL SUBOPT_0xA
                 ; 0000 00AB                lcd_putchar(dataKeypad[counter]);
0001bb d6ea      	RCALL SUBOPT_0xB
                 ; 0000 00AC             }
                 ; 0000 00AD             counter++;
                 _0x24:
0001bc 5f1f      	SUBI R17,-1
                 ; 0000 00AE          }
                 _0x23:
                 ; 0000 00AF          delay_ms(200);
0001bd d6eb      	RCALL SUBOPT_0xC
                 ; 0000 00B0       }
                 ; 0000 00B1       if(KEYPAD_IN.3==0) {
                 _0x21:
0001be 9983      	SBIC 0x10,3
0001bf c00e      	RJMP _0x25
                 ; 0000 00B2          if(limiter=='2') {
0001c0 81ad      	LDD  R26,Y+5
0001c1 33a2      	CPI  R26,LOW(0x32)
0001c2 f411      	BRNE _0x26
                 ; 0000 00B3             selesai = 1;
0001c3 d6cf      	RCALL SUBOPT_0x6
                 ; 0000 00B4          }
                 ; 0000 00B5          else {
0001c4 c008      	RJMP _0x27
                 _0x26:
                 ; 0000 00B6             dataKeypad[counter]='2';
0001c5 d6d0      	RCALL SUBOPT_0x7
0001c6 e3a2      	LDI  R26,LOW(50)
0001c7 d6d3      	RCALL SUBOPT_0x8
                 ; 0000 00B7             if(display) {
0001c8 f019      	BREQ _0x28
                 ; 0000 00B8                lcd_gotoxy(counter+startX,startY);
0001c9 d6d6      	RCALL SUBOPT_0x9
0001ca d6d9      	RCALL SUBOPT_0xA
                 ; 0000 00B9                lcd_putchar(dataKeypad[counter]);
0001cb d6da      	RCALL SUBOPT_0xB
                 ; 0000 00BA             }
                 ; 0000 00BB             counter++;
                 _0x28:
0001cc 5f1f      	SUBI R17,-1
                 ; 0000 00BC          }
                 _0x27:
                 ; 0000 00BD          delay_ms(200);
0001cd d6db      	RCALL SUBOPT_0xC
                 ; 0000 00BE       }
                 ; 0000 00BF       KEYPAD_OUT=0b11011111;
                 _0x25:
0001ce edef      	LDI  R30,LOW(223)
0001cf d6be      	RCALL SUBOPT_0x5
                 ; 0000 00C0       delay_ms(30);
                 ; 0000 00C1       if(KEYPAD_IN.0==0) {
0001d0 9980      	SBIC 0x10,0
0001d1 c00e      	RJMP _0x29
                 ; 0000 00C2          if(limiter=='#') {
0001d2 81ad      	LDD  R26,Y+5
0001d3 32a3      	CPI  R26,LOW(0x23)
0001d4 f411      	BRNE _0x2A
                 ; 0000 00C3             selesai = 1;
0001d5 d6bd      	RCALL SUBOPT_0x6
                 ; 0000 00C4          }
                 ; 0000 00C5          else {
0001d6 c008      	RJMP _0x2B
                 _0x2A:
                 ; 0000 00C6             dataKeypad[counter]='#';
0001d7 d6be      	RCALL SUBOPT_0x7
0001d8 e2a3      	LDI  R26,LOW(35)
0001d9 d6c1      	RCALL SUBOPT_0x8
                 ; 0000 00C7             if(display) {
0001da f019      	BREQ _0x2C
                 ; 0000 00C8                lcd_gotoxy(counter+startX,startY);
0001db d6c4      	RCALL SUBOPT_0x9
0001dc d6c7      	RCALL SUBOPT_0xA
                 ; 0000 00C9                lcd_putchar(dataKeypad[counter]);
0001dd d6c8      	RCALL SUBOPT_0xB
                 ; 0000 00CA             }
                 ; 0000 00CB             counter++;
                 _0x2C:
0001de 5f1f      	SUBI R17,-1
                 ; 0000 00CC          }
                 _0x2B:
                 ; 0000 00CD          delay_ms(200);
0001df d6c9      	RCALL SUBOPT_0xC
                 ; 0000 00CE       }
                 ; 0000 00CF       if(KEYPAD_IN.1==0) {
                 _0x29:
0001e0 9981      	SBIC 0x10,1
0001e1 c010      	RJMP _0x2D
                 ; 0000 00D0          if(limiter=='9') {
0001e2 81ad      	LDD  R26,Y+5
0001e3 33a9      	CPI  R26,LOW(0x39)
0001e4 f411      	BRNE _0x2E
                 ; 0000 00D1             selesai = 1;
0001e5 d6ad      	RCALL SUBOPT_0x6
                 ; 0000 00D2          }
                 ; 0000 00D3          else {
0001e6 c008      	RJMP _0x2F
                 _0x2E:
                 ; 0000 00D4             dataKeypad[counter]='9';
0001e7 d6ae      	RCALL SUBOPT_0x7
0001e8 e3a9      	LDI  R26,LOW(57)
0001e9 d6b1      	RCALL SUBOPT_0x8
                 ; 0000 00D5             if(display) {
0001ea f019      	BREQ _0x30
                 ; 0000 00D6                lcd_gotoxy(counter+startX,startY);
0001eb d6b4      	RCALL SUBOPT_0x9
0001ec d6b7      	RCALL SUBOPT_0xA
                 ; 0000 00D7                lcd_putchar(dataKeypad[counter]);
0001ed d6b8      	RCALL SUBOPT_0xB
                 ; 0000 00D8             }
                 ; 0000 00D9             counter++;
                 _0x30:
0001ee 5f1f      	SUBI R17,-1
                 ; 0000 00DA          }
                 _0x2F:
                 ; 0000 00DB          delay_ms(100);
0001ef e6e4      	LDI  R30,LOW(100)
0001f0 e0f0      	LDI  R31,HIGH(100)
0001f1 d6bb      	RCALL SUBOPT_0xD
                 ; 0000 00DC       }
                 ; 0000 00DD       if(KEYPAD_IN.2==0) {
                 _0x2D:
0001f2 9982      	SBIC 0x10,2
0001f3 c00e      	RJMP _0x31
                 ; 0000 00DE          if(limiter=='6') {
0001f4 81ad      	LDD  R26,Y+5
0001f5 33a6      	CPI  R26,LOW(0x36)
0001f6 f411      	BRNE _0x32
                 ; 0000 00DF             selesai = 1;
0001f7 d69b      	RCALL SUBOPT_0x6
                 ; 0000 00E0          }
                 ; 0000 00E1          else {
0001f8 c008      	RJMP _0x33
                 _0x32:
                 ; 0000 00E2             dataKeypad[counter]='6';
0001f9 d69c      	RCALL SUBOPT_0x7
0001fa e3a6      	LDI  R26,LOW(54)
0001fb d69f      	RCALL SUBOPT_0x8
                 ; 0000 00E3             if(display) {
0001fc f019      	BREQ _0x34
                 ; 0000 00E4                lcd_gotoxy(counter+startX,startY);
0001fd d6a2      	RCALL SUBOPT_0x9
0001fe d6a5      	RCALL SUBOPT_0xA
                 ; 0000 00E5                lcd_putchar(dataKeypad[counter]);
0001ff d6a6      	RCALL SUBOPT_0xB
                 ; 0000 00E6             }
                 ; 0000 00E7             counter++;
                 _0x34:
000200 5f1f      	SUBI R17,-1
                 ; 0000 00E8          }
                 _0x33:
                 ; 0000 00E9          delay_ms(200);
000201 d6a7      	RCALL SUBOPT_0xC
                 ; 0000 00EA       }
                 ; 0000 00EB       if(KEYPAD_IN.3==0) {
                 _0x31:
000202 9983      	SBIC 0x10,3
000203 c00e      	RJMP _0x35
                 ; 0000 00EC          if(limiter=='3') {
000204 81ad      	LDD  R26,Y+5
000205 33a3      	CPI  R26,LOW(0x33)
000206 f411      	BRNE _0x36
                 ; 0000 00ED             selesai = 1;
000207 d68b      	RCALL SUBOPT_0x6
                 ; 0000 00EE          }
                 ; 0000 00EF          else {
000208 c008      	RJMP _0x37
                 _0x36:
                 ; 0000 00F0             dataKeypad[counter]='3';
000209 d68c      	RCALL SUBOPT_0x7
00020a e3a3      	LDI  R26,LOW(51)
00020b d68f      	RCALL SUBOPT_0x8
                 ; 0000 00F1             if(display) {
00020c f019      	BREQ _0x38
                 ; 0000 00F2                lcd_gotoxy(counter+startX,startY);
00020d d692      	RCALL SUBOPT_0x9
00020e d695      	RCALL SUBOPT_0xA
                 ; 0000 00F3                lcd_putchar(dataKeypad[counter]);
00020f d696      	RCALL SUBOPT_0xB
                 ; 0000 00F4             }
                 ; 0000 00F5             counter++;
                 _0x38:
000210 5f1f      	SUBI R17,-1
                 ; 0000 00F6          }
                 _0x37:
                 ; 0000 00F7          delay_ms(200);
000211 d697      	RCALL SUBOPT_0xC
                 ; 0000 00F8       }
                 ; 0000 00F9       KEYPAD_OUT=0b11101111;
                 _0x35:
000212 eeef      	LDI  R30,LOW(239)
000213 d67a      	RCALL SUBOPT_0x5
                 ; 0000 00FA       delay_ms(30);
                 ; 0000 00FB       if(KEYPAD_IN.0==0) {
000214 9980      	SBIC 0x10,0
000215 c00e      	RJMP _0x39
                 ; 0000 00FC          if(limiter=='D') {
000216 81ad      	LDD  R26,Y+5
000217 34a4      	CPI  R26,LOW(0x44)
000218 f411      	BRNE _0x3A
                 ; 0000 00FD             selesai = 1;
000219 d679      	RCALL SUBOPT_0x6
                 ; 0000 00FE          }
                 ; 0000 00FF          else {
00021a c008      	RJMP _0x3B
                 _0x3A:
                 ; 0000 0100             dataKeypad[counter]='D';
00021b d67a      	RCALL SUBOPT_0x7
00021c e4a4      	LDI  R26,LOW(68)
00021d d67d      	RCALL SUBOPT_0x8
                 ; 0000 0101             if(display) {
00021e f019      	BREQ _0x3C
                 ; 0000 0102                lcd_gotoxy(counter+startX,startY);
00021f d680      	RCALL SUBOPT_0x9
000220 d683      	RCALL SUBOPT_0xA
                 ; 0000 0103                lcd_putchar(dataKeypad[counter]);
000221 d684      	RCALL SUBOPT_0xB
                 ; 0000 0104             }
                 ; 0000 0105             counter++;
                 _0x3C:
000222 5f1f      	SUBI R17,-1
                 ; 0000 0106          }
                 _0x3B:
                 ; 0000 0107          delay_ms(200);
000223 d685      	RCALL SUBOPT_0xC
                 ; 0000 0108       }
                 ; 0000 0109       if(KEYPAD_IN.1==0) {
                 _0x39:
000224 9981      	SBIC 0x10,1
000225 c00e      	RJMP _0x3D
                 ; 0000 010A          if(limiter=='C') {
000226 81ad      	LDD  R26,Y+5
000227 34a3      	CPI  R26,LOW(0x43)
000228 f411      	BRNE _0x3E
                 ; 0000 010B             selesai = 1;
000229 d669      	RCALL SUBOPT_0x6
                 ; 0000 010C          }
                 ; 0000 010D          else {
00022a c008      	RJMP _0x3F
                 _0x3E:
                 ; 0000 010E             dataKeypad[counter]='C';
00022b d66a      	RCALL SUBOPT_0x7
00022c e4a3      	LDI  R26,LOW(67)
00022d d66d      	RCALL SUBOPT_0x8
                 ; 0000 010F             if(display) {
00022e f019      	BREQ _0x40
                 ; 0000 0110                lcd_gotoxy(counter+startX,startY);
00022f d670      	RCALL SUBOPT_0x9
000230 d673      	RCALL SUBOPT_0xA
                 ; 0000 0111                lcd_putchar(dataKeypad[counter]);
000231 d674      	RCALL SUBOPT_0xB
                 ; 0000 0112             }
                 ; 0000 0113             counter++;
                 _0x40:
000232 5f1f      	SUBI R17,-1
                 ; 0000 0114          }
                 _0x3F:
                 ; 0000 0115          delay_ms(200);
000233 d675      	RCALL SUBOPT_0xC
                 ; 0000 0116       }
                 ; 0000 0117       if(KEYPAD_IN.2==0) {
                 _0x3D:
000234 9982      	SBIC 0x10,2
000235 c00e      	RJMP _0x41
                 ; 0000 0118          if(limiter=='B') {
000236 81ad      	LDD  R26,Y+5
000237 34a2      	CPI  R26,LOW(0x42)
000238 f411      	BRNE _0x42
                 ; 0000 0119             selesai = 1;
000239 d659      	RCALL SUBOPT_0x6
                 ; 0000 011A          }
                 ; 0000 011B          else {
00023a c008      	RJMP _0x43
                 _0x42:
                 ; 0000 011C             dataKeypad[counter]='B';
00023b d65a      	RCALL SUBOPT_0x7
00023c e4a2      	LDI  R26,LOW(66)
00023d d65d      	RCALL SUBOPT_0x8
                 ; 0000 011D             if(display) {
00023e f019      	BREQ _0x44
                 ; 0000 011E                lcd_gotoxy(counter+startX,startY);
00023f d660      	RCALL SUBOPT_0x9
000240 d663      	RCALL SUBOPT_0xA
                 ; 0000 011F                lcd_putchar(dataKeypad[counter]);
000241 d664      	RCALL SUBOPT_0xB
                 ; 0000 0120             }
                 ; 0000 0121             counter++;
                 _0x44:
000242 5f1f      	SUBI R17,-1
                 ; 0000 0122          }
                 _0x43:
                 ; 0000 0123          delay_ms(200);
000243 d665      	RCALL SUBOPT_0xC
                 ; 0000 0124       }
                 ; 0000 0125       if(KEYPAD_IN.3==0) {
                 _0x41:
000244 9983      	SBIC 0x10,3
000245 c00e      	RJMP _0x45
                 ; 0000 0126          if(limiter=='A') {
000246 81ad      	LDD  R26,Y+5
000247 34a1      	CPI  R26,LOW(0x41)
000248 f411      	BRNE _0x46
                 ; 0000 0127             selesai = 1;
000249 d649      	RCALL SUBOPT_0x6
                 ; 0000 0128          }
                 ; 0000 0129          else {
00024a c008      	RJMP _0x47
                 _0x46:
                 ; 0000 012A             dataKeypad[counter]='A';
00024b d64a      	RCALL SUBOPT_0x7
00024c e4a1      	LDI  R26,LOW(65)
00024d d64d      	RCALL SUBOPT_0x8
                 ; 0000 012B             if(display) {
00024e f019      	BREQ _0x48
                 ; 0000 012C                lcd_gotoxy(counter+startX,startY);
00024f d650      	RCALL SUBOPT_0x9
000250 d653      	RCALL SUBOPT_0xA
                 ; 0000 012D                lcd_putchar(dataKeypad[counter]);
000251 d654      	RCALL SUBOPT_0xB
                 ; 0000 012E             }
                 ; 0000 012F             counter++;
                 _0x48:
000252 5f1f      	SUBI R17,-1
                 ; 0000 0130          }
                 _0x47:
                 ; 0000 0131          delay_ms(200);
000253 d655      	RCALL SUBOPT_0xC
                 ; 0000 0132       }
                 ; 0000 0133    }
                 _0x45:
000254 cef0      	RJMP _0x6
                 _0x8:
                 ; 0000 0134 }
000255 8118      	LDD  R17,Y+0
000256 9626      	ADIW R28,6
000257 90ff      	POP  R15
000258 9508      	RET
                 ;
                 ;void menuSetting1() {
                 ; 0000 0136 void menuSetting1() {
                 _menuSetting1:
000259 92ff      	PUSH R15
                 ; 0000 0137    char jOn[3], dOn[3], jOff[3], dOff[3];
                 ; 0000 0138    bit inputSalah = 0;
                 ; 0000 0139    int i;
                 ; 0000 013A    lcd_clear();
00025a d654      	RCALL SUBOPT_0xE
                 ;	jOn -> Y+11
                 ;	dOn -> Y+8
                 ;	jOff -> Y+5
                 ;	dOff -> Y+2
                 ;	inputSalah -> R15.0
                 ;	i -> R16,R17
                 ; 0000 013B    lcd_gotoxy(0,0);
                 ; 0000 013C    lcd_puts("Set Timer Beban1");
                +
00025b eee0     +LDI R30 , LOW ( _0x49 + ( 0 ) )
00025c e0f0     +LDI R31 , HIGH ( _0x49 + ( 0 ) )
                 	__POINTW1MN _0x49,0
00025d d659      	RCALL SUBOPT_0xF
                 ; 0000 013D    delay_ms(1000);
00025e d65a      	RCALL SUBOPT_0x10
                 ; 0000 013E 
                 ; 0000 013F    for(i=0;i<3;i++) {
00025f d620      	RCALL SUBOPT_0x1
                 _0x4B:
000260 d65b      	RCALL SUBOPT_0x11
000261 f434      	BRGE _0x4C
                 ; 0000 0140       jOn[i]=0;
000262 d65d      	RCALL SUBOPT_0x12
                 ; 0000 0141       dOn[i]=0;
000263 d65f      	RCALL SUBOPT_0x13
                 ; 0000 0142       jOff[i]=0;
000264 d661      	RCALL SUBOPT_0x14
                 ; 0000 0143       dOff[i]=0;
000265 d663      	RCALL SUBOPT_0x15
                 ; 0000 0144    }
000266 d621      	RCALL SUBOPT_0x3
000267 cff8      	RJMP _0x4B
                 _0x4C:
                 ; 0000 0145 
                 ; 0000 0146    lcd_clear();
000268 d663      	RCALL SUBOPT_0x16
                 ; 0000 0147    lcd_gotoxy(0,0);
                 ; 0000 0148    lcd_puts("Set Timer On    ");
                +
000269 efe1     +LDI R30 , LOW ( _0x49 + ( 17 ) )
00026a e0f0     +LDI R31 , HIGH ( _0x49 + ( 17 ) )
                 	__POINTW1MN _0x49,17
00026b d64b      	RCALL SUBOPT_0xF
                 ; 0000 0149    scanKeypad('#',1,0,1);
00026c d664      	RCALL SUBOPT_0x17
                 ; 0000 014A    jOn[0]=dataKeypad[0];
00026d d670      	RCALL SUBOPT_0x18
                 ; 0000 014B    jOn[1]=dataKeypad[1];
                 ; 0000 014C    dOn[0]=dataKeypad[3];
                 ; 0000 014D    dOn[1]=dataKeypad[4];
                 ; 0000 014E    sscanf(jOn,"%d",&jamTimerOn[0]);
00026e efe0      	LDI  R30,LOW(_jamTimerOn)
00026f e0f1      	LDI  R31,HIGH(_jamTimerOn)
000270 d67d      	RCALL SUBOPT_0x19
                 ; 0000 014F    sscanf(dOn,"%d",&menitTimerOn[0]);
000271 d683      	RCALL SUBOPT_0x1A
000272 efe4      	LDI  R30,LOW(_menitTimerOn)
000273 e0f1      	LDI  R31,HIGH(_menitTimerOn)
000274 d679      	RCALL SUBOPT_0x19
                 ; 0000 0150    // SIMPAN KE EEPROM
                 ; 0000 0151    _jamTimerOn[0] = jamTimerOn[0];
000275 91e0 01f0 	LDS  R30,_jamTimerOn
000277 d683      	RCALL SUBOPT_0x1B
000278 d823      	RCALL __EEPROMWRB
                 ; 0000 0152    _menitTimerOn[0] = menitTimerOn[0];
000279 91e0 01f4 	LDS  R30,_menitTimerOn
00027b d682      	RCALL SUBOPT_0x1C
00027c d684      	RCALL SUBOPT_0x1D
                 ; 0000 0153 
                 ; 0000 0154    lcd_clear();
                 ; 0000 0155    lcd_gotoxy(0,0);
                 ; 0000 0156    lcd_puts("Set Timer Off   ");
                +
00027d e0e2     +LDI R30 , LOW ( _0x49 + ( 34 ) )
00027e e0f1     +LDI R31 , HIGH ( _0x49 + ( 34 ) )
                 	__POINTW1MN _0x49,34
00027f d637      	RCALL SUBOPT_0xF
                 ; 0000 0157    scanKeypad('#',1,0,1);
000280 d650      	RCALL SUBOPT_0x17
                 ; 0000 0158 
                 ; 0000 0159    jOff[0]=dataKeypad[0];
000281 d681      	RCALL SUBOPT_0x1E
                 ; 0000 015A    jOff[1]=dataKeypad[1];
                 ; 0000 015B    dOff[0]=dataKeypad[3];
                 ; 0000 015C    dOff[1]=dataKeypad[4];
                 ; 0000 015D 
                 ; 0000 015E    sscanf(jOff,"%d",&jamTimerOff[0]);
000282 efe8      	LDI  R30,LOW(_jamTimerOff)
000283 e0f1      	LDI  R31,HIGH(_jamTimerOff)
000284 d669      	RCALL SUBOPT_0x19
                 ; 0000 015F    sscanf(dOff,"%d",&menitTimerOff[0]);
000285 d68d      	RCALL SUBOPT_0x1F
000286 efec      	LDI  R30,LOW(_menitTimerOff)
000287 e0f1      	LDI  R31,HIGH(_menitTimerOff)
000288 d665      	RCALL SUBOPT_0x19
                 ; 0000 0160 
                 ; 0000 0161    // SIMPAN KE EEPROM
                 ; 0000 0162    _jamTimerOff[0] = jamTimerOff[0];
000289 91e0 01f8 	LDS  R30,_jamTimerOff
00028b d68d      	RCALL SUBOPT_0x20
00028c d80f      	RCALL __EEPROMWRB
                 ; 0000 0163    _menitTimerOff[0] = menitTimerOff[0];
00028d 91e0 01fc 	LDS  R30,_menitTimerOff
00028f d68c      	RCALL SUBOPT_0x21
000290 d670      	RCALL SUBOPT_0x1D
                 ; 0000 0164 
                 ; 0000 0165    lcd_clear();
                 ; 0000 0166    lcd_gotoxy(0,0);
                 ; 0000 0167    lcd_puts("Setting Finish  ");
                +
000291 e1e3     +LDI R30 , LOW ( _0x49 + ( 51 ) )
000292 e0f1     +LDI R31 , HIGH ( _0x49 + ( 51 ) )
                 	__POINTW1MN _0x49,51
000293 c0b0      	RJMP _0x20C0008
                 ; 0000 0168    delay_ms(1000);
                 ; 0000 0169 }
                 
                 	.DSEG
                 _0x49:
0000e0           	.BYTE 0x44
                 ;
                 ;void menuSetting2() {
                 ; 0000 016B void menuSetting2() {
                 
                 	.CSEG
                 _menuSetting2:
000294 92ff      	PUSH R15
                 ; 0000 016C    char jOn[3], dOn[3], jOff[3], dOff[3];
                 ; 0000 016D    bit inputSalah = 0;
                 ; 0000 016E    int i;
                 ; 0000 016F    lcd_clear();
000295 d619      	RCALL SUBOPT_0xE
                 ;	jOn -> Y+11
                 ;	dOn -> Y+8
                 ;	jOff -> Y+5
                 ;	dOff -> Y+2
                 ;	inputSalah -> R15.0
                 ;	i -> R16,R17
                 ; 0000 0170    lcd_gotoxy(0,0);
                 ; 0000 0171    lcd_puts("Set Timer Beban2");
                +
000296 e2e4     +LDI R30 , LOW ( _0x4D + ( 0 ) )
000297 e0f1     +LDI R31 , HIGH ( _0x4D + ( 0 ) )
                 	__POINTW1MN _0x4D,0
000298 d61e      	RCALL SUBOPT_0xF
                 ; 0000 0172    delay_ms(1000);
000299 d61f      	RCALL SUBOPT_0x10
                 ; 0000 0173 
                 ; 0000 0174    for(i=0;i<3;i++) {
00029a d5e5      	RCALL SUBOPT_0x1
                 _0x4F:
00029b d620      	RCALL SUBOPT_0x11
00029c f434      	BRGE _0x50
                 ; 0000 0175       jOn[i]=0;
00029d d622      	RCALL SUBOPT_0x12
                 ; 0000 0176       dOn[i]=0;
00029e d624      	RCALL SUBOPT_0x13
                 ; 0000 0177       jOff[i]=0;
00029f d626      	RCALL SUBOPT_0x14
                 ; 0000 0178       dOff[i]=0;
0002a0 d628      	RCALL SUBOPT_0x15
                 ; 0000 0179    }
0002a1 d5e6      	RCALL SUBOPT_0x3
0002a2 cff8      	RJMP _0x4F
                 _0x50:
                 ; 0000 017A 
                 ; 0000 017B    lcd_clear();
0002a3 d628      	RCALL SUBOPT_0x16
                 ; 0000 017C    lcd_gotoxy(0,0);
                 ; 0000 017D    lcd_puts("Set Timer On    ");
                +
0002a4 e3e5     +LDI R30 , LOW ( _0x4D + ( 17 ) )
0002a5 e0f1     +LDI R31 , HIGH ( _0x4D + ( 17 ) )
                 	__POINTW1MN _0x4D,17
0002a6 d610      	RCALL SUBOPT_0xF
                 ; 0000 017E    scanKeypad('#',1,0,1);
0002a7 d629      	RCALL SUBOPT_0x17
                 ; 0000 017F    jOn[0]=dataKeypad[0];
0002a8 d635      	RCALL SUBOPT_0x18
                 ; 0000 0180    jOn[1]=dataKeypad[1];
                 ; 0000 0181    dOn[0]=dataKeypad[3];
                 ; 0000 0182    dOn[1]=dataKeypad[4];
                 ; 0000 0183    sscanf(jOn,"%d",&jamTimerOn[1]);
                +
0002a9 efe1     +LDI R30 , LOW ( _jamTimerOn + ( 1 ) )
0002aa e0f1     +LDI R31 , HIGH ( _jamTimerOn + ( 1 ) )
                 	__POINTW1MN _jamTimerOn,1
0002ab d642      	RCALL SUBOPT_0x19
                 ; 0000 0184    sscanf(dOn,"%d",&menitTimerOn[1]);
0002ac d648      	RCALL SUBOPT_0x1A
                +
0002ad efe5     +LDI R30 , LOW ( _menitTimerOn + ( 1 ) )
0002ae e0f1     +LDI R31 , HIGH ( _menitTimerOn + ( 1 ) )
                 	__POINTW1MN _menitTimerOn,1
0002af d63e      	RCALL SUBOPT_0x19
                 ; 0000 0185 
                 ; 0000 0186    // SIMPAN KE EEPROM
                 ; 0000 0187    _jamTimerOn[1] = jamTimerOn[1];
0002b0 d66e      	RCALL SUBOPT_0x22
                +
0002b1 91e0 01f1+LDS R30 , _jamTimerOn + ( 1 )
                 	__GETB1MN _jamTimerOn,1
0002b3 d7e8      	RCALL __EEPROMWRB
                 ; 0000 0188    _menitTimerOn[1] = menitTimerOn[1];
0002b4 d66d      	RCALL SUBOPT_0x23
                +
0002b5 91e0 01f5+LDS R30 , _menitTimerOn + ( 1 )
                 	__GETB1MN _menitTimerOn,1
0002b7 d649      	RCALL SUBOPT_0x1D
                 ; 0000 0189 
                 ; 0000 018A    lcd_clear();
                 ; 0000 018B    lcd_gotoxy(0,0);
                 ; 0000 018C    lcd_puts("Set Timer Off   ");
                +
0002b8 e4e6     +LDI R30 , LOW ( _0x4D + ( 34 ) )
0002b9 e0f1     +LDI R31 , HIGH ( _0x4D + ( 34 ) )
                 	__POINTW1MN _0x4D,34
0002ba d5fc      	RCALL SUBOPT_0xF
                 ; 0000 018D    scanKeypad('#',1,0,1);
0002bb d615      	RCALL SUBOPT_0x17
                 ; 0000 018E 
                 ; 0000 018F    jOff[0]=dataKeypad[0];
0002bc d646      	RCALL SUBOPT_0x1E
                 ; 0000 0190    jOff[1]=dataKeypad[1];
                 ; 0000 0191    dOff[0]=dataKeypad[3];
                 ; 0000 0192    dOff[1]=dataKeypad[4];
                 ; 0000 0193 
                 ; 0000 0194    sscanf(jOff,"%d",&jamTimerOff[1]);
                +
0002bd efe9     +LDI R30 , LOW ( _jamTimerOff + ( 1 ) )
0002be e0f1     +LDI R31 , HIGH ( _jamTimerOff + ( 1 ) )
                 	__POINTW1MN _jamTimerOff,1
0002bf d62e      	RCALL SUBOPT_0x19
                 ; 0000 0195    sscanf(dOff,"%d",&menitTimerOff[1]);
0002c0 d652      	RCALL SUBOPT_0x1F
                +
0002c1 efed     +LDI R30 , LOW ( _menitTimerOff + ( 1 ) )
0002c2 e0f1     +LDI R31 , HIGH ( _menitTimerOff + ( 1 ) )
                 	__POINTW1MN _menitTimerOff,1
0002c3 d62a      	RCALL SUBOPT_0x19
                 ; 0000 0196 
                 ; 0000 0197    // SIMPAN KE EEPROM
                 ; 0000 0198    _jamTimerOff[1] = jamTimerOff[1];
0002c4 d660      	RCALL SUBOPT_0x24
                +
0002c5 91e0 01f9+LDS R30 , _jamTimerOff + ( 1 )
                 	__GETB1MN _jamTimerOff,1
0002c7 d7d4      	RCALL __EEPROMWRB
                 ; 0000 0199    _menitTimerOff[1] = menitTimerOff[1];
0002c8 d65f      	RCALL SUBOPT_0x25
                +
0002c9 91e0 01fd+LDS R30 , _menitTimerOff + ( 1 )
                 	__GETB1MN _menitTimerOff,1
0002cb d635      	RCALL SUBOPT_0x1D
                 ; 0000 019A 
                 ; 0000 019B    lcd_clear();
                 ; 0000 019C    lcd_gotoxy(0,0);
                 ; 0000 019D    lcd_puts("Setting Finish  ");
                +
0002cc e5e7     +LDI R30 , LOW ( _0x4D + ( 51 ) )
0002cd e0f1     +LDI R31 , HIGH ( _0x4D + ( 51 ) )
                 	__POINTW1MN _0x4D,51
0002ce c075      	RJMP _0x20C0008
                 ; 0000 019E    delay_ms(1000);
                 ; 0000 019F }
                 
                 	.DSEG
                 _0x4D:
000124           	.BYTE 0x44
                 ;
                 ;void menuSetting3() {
                 ; 0000 01A1 void menuSetting3() {
                 
                 	.CSEG
                 _menuSetting3:
0002cf 92ff      	PUSH R15
                 ; 0000 01A2    char jOn[3], dOn[3], jOff[3], dOff[3];
                 ; 0000 01A3    bit inputSalah = 0;
                 ; 0000 01A4    int i;
                 ; 0000 01A5    lcd_clear();
0002d0 d5de      	RCALL SUBOPT_0xE
                 ;	jOn -> Y+11
                 ;	dOn -> Y+8
                 ;	jOff -> Y+5
                 ;	dOff -> Y+2
                 ;	inputSalah -> R15.0
                 ;	i -> R16,R17
                 ; 0000 01A6    lcd_gotoxy(0,0);
                 ; 0000 01A7    lcd_puts("Set Timer Beban3");
                +
0002d1 e6e8     +LDI R30 , LOW ( _0x51 + ( 0 ) )
0002d2 e0f1     +LDI R31 , HIGH ( _0x51 + ( 0 ) )
                 	__POINTW1MN _0x51,0
0002d3 d5e3      	RCALL SUBOPT_0xF
                 ; 0000 01A8    delay_ms(1000);
0002d4 d5e4      	RCALL SUBOPT_0x10
                 ; 0000 01A9 
                 ; 0000 01AA    for(i=0;i<3;i++) {
0002d5 d5aa      	RCALL SUBOPT_0x1
                 _0x53:
0002d6 d5e5      	RCALL SUBOPT_0x11
0002d7 f434      	BRGE _0x54
                 ; 0000 01AB       jOn[i]=0;
0002d8 d5e7      	RCALL SUBOPT_0x12
                 ; 0000 01AC       dOn[i]=0;
0002d9 d5e9      	RCALL SUBOPT_0x13
                 ; 0000 01AD       jOff[i]=0;
0002da d5eb      	RCALL SUBOPT_0x14
                 ; 0000 01AE       dOff[i]=0;
0002db d5ed      	RCALL SUBOPT_0x15
                 ; 0000 01AF    }
0002dc d5ab      	RCALL SUBOPT_0x3
0002dd cff8      	RJMP _0x53
                 _0x54:
                 ; 0000 01B0 
                 ; 0000 01B1    lcd_clear();
0002de d5ed      	RCALL SUBOPT_0x16
                 ; 0000 01B2    lcd_gotoxy(0,0);
                 ; 0000 01B3    lcd_puts("Set Timer On    ");
                +
0002df e7e9     +LDI R30 , LOW ( _0x51 + ( 17 ) )
0002e0 e0f1     +LDI R31 , HIGH ( _0x51 + ( 17 ) )
                 	__POINTW1MN _0x51,17
0002e1 d5d5      	RCALL SUBOPT_0xF
                 ; 0000 01B4    scanKeypad('#',1,0,1);
0002e2 d5ee      	RCALL SUBOPT_0x17
                 ; 0000 01B5    jOn[0]=dataKeypad[0];
0002e3 d5fa      	RCALL SUBOPT_0x18
                 ; 0000 01B6    jOn[1]=dataKeypad[1];
                 ; 0000 01B7    dOn[0]=dataKeypad[3];
                 ; 0000 01B8    dOn[1]=dataKeypad[4];
                 ; 0000 01B9    sscanf(jOn,"%d",&jamTimerOn[2]);
                +
0002e4 efe2     +LDI R30 , LOW ( _jamTimerOn + ( 2 ) )
0002e5 e0f1     +LDI R31 , HIGH ( _jamTimerOn + ( 2 ) )
                 	__POINTW1MN _jamTimerOn,2
0002e6 d607      	RCALL SUBOPT_0x19
                 ; 0000 01BA    sscanf(dOn,"%d",&menitTimerOn[2]);
0002e7 d60d      	RCALL SUBOPT_0x1A
                +
0002e8 efe6     +LDI R30 , LOW ( _menitTimerOn + ( 2 ) )
0002e9 e0f1     +LDI R31 , HIGH ( _menitTimerOn + ( 2 ) )
                 	__POINTW1MN _menitTimerOn,2
0002ea d603      	RCALL SUBOPT_0x19
                 ; 0000 01BB 
                 ; 0000 01BC    // SIMPAN KE EEPROM
                 ; 0000 01BD    _jamTimerOn[2] = jamTimerOn[2];
0002eb d63f      	RCALL SUBOPT_0x26
                +
0002ec 91e0 01f2+LDS R30 , _jamTimerOn + ( 2 )
                 	__GETB1MN _jamTimerOn,2
0002ee d7ad      	RCALL __EEPROMWRB
                 ; 0000 01BE    _menitTimerOn[2] = menitTimerOn[2];
0002ef d63e      	RCALL SUBOPT_0x27
                +
0002f0 91e0 01f6+LDS R30 , _menitTimerOn + ( 2 )
                 	__GETB1MN _menitTimerOn,2
0002f2 d60e      	RCALL SUBOPT_0x1D
                 ; 0000 01BF    lcd_clear();
                 ; 0000 01C0    lcd_gotoxy(0,0);
                 ; 0000 01C1    lcd_puts("Set Timer Off   ");
                +
0002f3 e8ea     +LDI R30 , LOW ( _0x51 + ( 34 ) )
0002f4 e0f1     +LDI R31 , HIGH ( _0x51 + ( 34 ) )
                 	__POINTW1MN _0x51,34
0002f5 d5c1      	RCALL SUBOPT_0xF
                 ; 0000 01C2    scanKeypad('#',1,0,1);
0002f6 d5da      	RCALL SUBOPT_0x17
                 ; 0000 01C3 
                 ; 0000 01C4    jOff[0]=dataKeypad[0];
0002f7 d60b      	RCALL SUBOPT_0x1E
                 ; 0000 01C5    jOff[1]=dataKeypad[1];
                 ; 0000 01C6    dOff[0]=dataKeypad[3];
                 ; 0000 01C7    dOff[1]=dataKeypad[4];
                 ; 0000 01C8 
                 ; 0000 01C9    sscanf(jOff,"%d",&jamTimerOff[2]);
                +
0002f8 efea     +LDI R30 , LOW ( _jamTimerOff + ( 2 ) )
0002f9 e0f1     +LDI R31 , HIGH ( _jamTimerOff + ( 2 ) )
                 	__POINTW1MN _jamTimerOff,2
0002fa d5f3      	RCALL SUBOPT_0x19
                 ; 0000 01CA    sscanf(dOff,"%d",&menitTimerOff[2]);
0002fb d617      	RCALL SUBOPT_0x1F
                +
0002fc efee     +LDI R30 , LOW ( _menitTimerOff + ( 2 ) )
0002fd e0f1     +LDI R31 , HIGH ( _menitTimerOff + ( 2 ) )
                 	__POINTW1MN _menitTimerOff,2
0002fe d5ef      	RCALL SUBOPT_0x19
                 ; 0000 01CB 
                 ; 0000 01CC    // SIMPAN KE EEPROM
                 ; 0000 01CD    _jamTimerOff[2] = jamTimerOff[2];
0002ff d631      	RCALL SUBOPT_0x28
                +
000300 91e0 01fa+LDS R30 , _jamTimerOff + ( 2 )
                 	__GETB1MN _jamTimerOff,2
000302 d799      	RCALL __EEPROMWRB
                 ; 0000 01CE    _menitTimerOff[2] = menitTimerOff[2];
000303 d630      	RCALL SUBOPT_0x29
                +
000304 91e0 01fe+LDS R30 , _menitTimerOff + ( 2 )
                 	__GETB1MN _menitTimerOff,2
000306 d5fa      	RCALL SUBOPT_0x1D
                 ; 0000 01CF 
                 ; 0000 01D0    lcd_clear();
                 ; 0000 01D1    lcd_gotoxy(0,0);
                 ; 0000 01D2    lcd_puts("Setting Finish  ");
                +
000307 e9eb     +LDI R30 , LOW ( _0x51 + ( 51 ) )
000308 e0f1     +LDI R31 , HIGH ( _0x51 + ( 51 ) )
                 	__POINTW1MN _0x51,51
000309 c03a      	RJMP _0x20C0008
                 ; 0000 01D3    delay_ms(1000);
                 ; 0000 01D4 }
                 
                 	.DSEG
                 _0x51:
000168           	.BYTE 0x44
                 ;
                 ;void menuSetting4() {
                 ; 0000 01D6 void menuSetting4() {
                 
                 	.CSEG
                 _menuSetting4:
00030a 92ff      	PUSH R15
                 ; 0000 01D7    char jOn[3], dOn[3], jOff[3], dOff[3];
                 ; 0000 01D8    bit inputSalah = 0;
                 ; 0000 01D9    int i;
                 ; 0000 01DA    lcd_clear();
00030b d5a3      	RCALL SUBOPT_0xE
                 ;	jOn -> Y+11
                 ;	dOn -> Y+8
                 ;	jOff -> Y+5
                 ;	dOff -> Y+2
                 ;	inputSalah -> R15.0
                 ;	i -> R16,R17
                 ; 0000 01DB    lcd_gotoxy(0,0);
                 ; 0000 01DC    lcd_puts("Set Timer Beban4");
                +
00030c eaec     +LDI R30 , LOW ( _0x55 + ( 0 ) )
00030d e0f1     +LDI R31 , HIGH ( _0x55 + ( 0 ) )
                 	__POINTW1MN _0x55,0
00030e d5a8      	RCALL SUBOPT_0xF
                 ; 0000 01DD    delay_ms(1000);
00030f d5a9      	RCALL SUBOPT_0x10
                 ; 0000 01DE 
                 ; 0000 01DF    for(i=0;i<3;i++) {
000310 d56f      	RCALL SUBOPT_0x1
                 _0x57:
000311 d5aa      	RCALL SUBOPT_0x11
000312 f434      	BRGE _0x58
                 ; 0000 01E0       jOn[i]=0;
000313 d5ac      	RCALL SUBOPT_0x12
                 ; 0000 01E1       dOn[i]=0;
000314 d5ae      	RCALL SUBOPT_0x13
                 ; 0000 01E2       jOff[i]=0;
000315 d5b0      	RCALL SUBOPT_0x14
                 ; 0000 01E3       dOff[i]=0;
000316 d5b2      	RCALL SUBOPT_0x15
                 ; 0000 01E4    }
000317 d570      	RCALL SUBOPT_0x3
000318 cff8      	RJMP _0x57
                 _0x58:
                 ; 0000 01E5 
                 ; 0000 01E6    lcd_clear();
000319 d5b2      	RCALL SUBOPT_0x16
                 ; 0000 01E7    lcd_gotoxy(0,0);
                 ; 0000 01E8    lcd_puts("Set Timer On    ");
                +
00031a ebed     +LDI R30 , LOW ( _0x55 + ( 17 ) )
00031b e0f1     +LDI R31 , HIGH ( _0x55 + ( 17 ) )
                 	__POINTW1MN _0x55,17
00031c d59a      	RCALL SUBOPT_0xF
                 ; 0000 01E9    scanKeypad('#',1,0,1);
00031d d5b3      	RCALL SUBOPT_0x17
                 ; 0000 01EA    jOn[0]=dataKeypad[0];
00031e d5bf      	RCALL SUBOPT_0x18
                 ; 0000 01EB    jOn[1]=dataKeypad[1];
                 ; 0000 01EC    dOn[0]=dataKeypad[3];
                 ; 0000 01ED    dOn[1]=dataKeypad[4];
                 ; 0000 01EE    sscanf(jOn,"%d",&jamTimerOn[3]);
                +
00031f efe3     +LDI R30 , LOW ( _jamTimerOn + ( 3 ) )
000320 e0f1     +LDI R31 , HIGH ( _jamTimerOn + ( 3 ) )
                 	__POINTW1MN _jamTimerOn,3
000321 d5cc      	RCALL SUBOPT_0x19
                 ; 0000 01EF    sscanf(dOn,"%d",&menitTimerOn[3]);
000322 d5d2      	RCALL SUBOPT_0x1A
                +
000323 efe7     +LDI R30 , LOW ( _menitTimerOn + ( 3 ) )
000324 e0f1     +LDI R31 , HIGH ( _menitTimerOn + ( 3 ) )
                 	__POINTW1MN _menitTimerOn,3
000325 d5c8      	RCALL SUBOPT_0x19
                 ; 0000 01F0 
                 ; 0000 01F1    // SIMPAN KE EEPROM
                 ; 0000 01F2    _jamTimerOn[3] = jamTimerOn[3];
000326 d610      	RCALL SUBOPT_0x2A
                +
000327 91e0 01f3+LDS R30 , _jamTimerOn + ( 3 )
                 	__GETB1MN _jamTimerOn,3
000329 d772      	RCALL __EEPROMWRB
                 ; 0000 01F3    _menitTimerOn[3] = menitTimerOn[3];
00032a d60f      	RCALL SUBOPT_0x2B
                +
00032b 91e0 01f7+LDS R30 , _menitTimerOn + ( 3 )
                 	__GETB1MN _menitTimerOn,3
00032d d5d3      	RCALL SUBOPT_0x1D
                 ; 0000 01F4 
                 ; 0000 01F5    lcd_clear();
                 ; 0000 01F6    lcd_gotoxy(0,0);
                 ; 0000 01F7    lcd_puts("Set Timer Off   ");
                +
00032e ecee     +LDI R30 , LOW ( _0x55 + ( 34 ) )
00032f e0f1     +LDI R31 , HIGH ( _0x55 + ( 34 ) )
                 	__POINTW1MN _0x55,34
000330 d586      	RCALL SUBOPT_0xF
                 ; 0000 01F8    scanKeypad('#',1,0,1);
000331 d59f      	RCALL SUBOPT_0x17
                 ; 0000 01F9 
                 ; 0000 01FA    jOff[0]=dataKeypad[0];
000332 d5d0      	RCALL SUBOPT_0x1E
                 ; 0000 01FB    jOff[1]=dataKeypad[1];
                 ; 0000 01FC    dOff[0]=dataKeypad[3];
                 ; 0000 01FD    dOff[1]=dataKeypad[4];
                 ; 0000 01FE 
                 ; 0000 01FF    sscanf(jOff,"%d",&jamTimerOff[3]);
                +
000333 efeb     +LDI R30 , LOW ( _jamTimerOff + ( 3 ) )
000334 e0f1     +LDI R31 , HIGH ( _jamTimerOff + ( 3 ) )
                 	__POINTW1MN _jamTimerOff,3
000335 d5b8      	RCALL SUBOPT_0x19
                 ; 0000 0200    sscanf(dOff,"%d",&menitTimerOff[3]);
000336 d5dc      	RCALL SUBOPT_0x1F
                +
000337 efef     +LDI R30 , LOW ( _menitTimerOff + ( 3 ) )
000338 e0f1     +LDI R31 , HIGH ( _menitTimerOff + ( 3 ) )
                 	__POINTW1MN _menitTimerOff,3
000339 d5b4      	RCALL SUBOPT_0x19
                 ; 0000 0201 
                 ; 0000 0202    // SIMPAN KE EEPROM
                 ; 0000 0203    _jamTimerOff[3] = jamTimerOff[3];
00033a d602      	RCALL SUBOPT_0x2C
                +
00033b 91e0 01fb+LDS R30 , _jamTimerOff + ( 3 )
                 	__GETB1MN _jamTimerOff,3
00033d d75e      	RCALL __EEPROMWRB
                 ; 0000 0204    _menitTimerOff[3] = menitTimerOff[3];
00033e d601      	RCALL SUBOPT_0x2D
                +
00033f 91e0 01ff+LDS R30 , _menitTimerOff + ( 3 )
                 	__GETB1MN _menitTimerOff,3
000341 d5bf      	RCALL SUBOPT_0x1D
                 ; 0000 0205 
                 ; 0000 0206    lcd_clear();
                 ; 0000 0207    lcd_gotoxy(0,0);
                 ; 0000 0208    lcd_puts("Setting Finish  ");
                +
000342 edef     +LDI R30 , LOW ( _0x55 + ( 51 ) )
000343 e0f1     +LDI R31 , HIGH ( _0x55 + ( 51 ) )
                 	__POINTW1MN _0x55,51
                 _0x20C0008:
000344 93fa      	ST   -Y,R31
000345 93ea      	ST   -Y,R30
000346 d4be      	RCALL _lcd_puts
                 ; 0000 0209    delay_ms(1000);
000347 d571      	RCALL SUBOPT_0x10
                 ; 0000 020A }
000348 d76f      	RCALL __LOADLOCR2
000349 962e      	ADIW R28,14
00034a 90ff      	POP  R15
00034b 9508      	RET
                 
                 	.DSEG
                 _0x55:
0001ac           	.BYTE 0x44
                 ;
                 ;void main(void)
                 ; 0000 020D {
                 
                 	.CSEG
                 _main:
                 ; 0000 020E // Declare your local variables here
                 ; 0000 020F 
                 ; 0000 0210 // Input/Output Ports initialization
                 ; 0000 0211 // Port A initialization
                 ; 0000 0212 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0213 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0214 PORTA=0x00;
00034c e0e0      	LDI  R30,LOW(0)
00034d bbeb      	OUT  0x1B,R30
                 ; 0000 0215 DDRA=0x00;
00034e bbea      	OUT  0x1A,R30
                 ; 0000 0216 
                 ; 0000 0217 // Port B initialization
                 ; 0000 0218 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0219 // State7=T State6=T State5=T State4=T State3=P State2=P State1=P State0=P
                 ; 0000 021A PORTB=0x0F;
00034f e0ef      	LDI  R30,LOW(15)
000350 bbe8      	OUT  0x18,R30
                 ; 0000 021B DDRB=0x00;
000351 e0e0      	LDI  R30,LOW(0)
000352 bbe7      	OUT  0x17,R30
                 ; 0000 021C 
                 ; 0000 021D // Port C initialization
                 ; 0000 021E // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0000 021F // State7=1 State6=1 State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0000 0220 PORTC=0xF0;
000353 efe0      	LDI  R30,LOW(240)
000354 bbe5      	OUT  0x15,R30
                 ; 0000 0221 DDRC=0xF0;
000355 bbe4      	OUT  0x14,R30
                 ; 0000 0222 
                 ; 0000 0223 // Port D initialization
                 ; 0000 0224 // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 0225 // State7=P State6=P State5=P State4=P State3=0 State2=0 State1=0 State0=0
                 ; 0000 0226 PORTD=0xFF;
000356 efef      	LDI  R30,LOW(255)
000357 bbe2      	OUT  0x12,R30
                 ; 0000 0227 DDRD=0xF0;
000358 efe0      	LDI  R30,LOW(240)
000359 bbe1      	OUT  0x11,R30
                 ; 0000 0228 
                 ; 0000 0229 // Timer/Counter 0 initialization
                 ; 0000 022A // Clock source: System Clock
                 ; 0000 022B // Clock value: Timer 0 Stopped
                 ; 0000 022C // Mode: Normal top=0xFF
                 ; 0000 022D // OC0 output: Disconnected
                 ; 0000 022E TCCR0=0x00;
00035a e0e0      	LDI  R30,LOW(0)
00035b bfe3      	OUT  0x33,R30
                 ; 0000 022F TCNT0=0x00;
00035c bfe2      	OUT  0x32,R30
                 ; 0000 0230 OCR0=0x00;
00035d bfec      	OUT  0x3C,R30
                 ; 0000 0231 
                 ; 0000 0232 // Timer/Counter 1 initialization
                 ; 0000 0233 // Clock source: System Clock
                 ; 0000 0234 // Clock value: Timer1 Stopped
                 ; 0000 0235 // Mode: Normal top=0xFFFF
                 ; 0000 0236 // OC1A output: Discon.
                 ; 0000 0237 // OC1B output: Discon.
                 ; 0000 0238 // Noise Canceler: Off
                 ; 0000 0239 // Input Capture on Falling Edge
                 ; 0000 023A // Timer1 Overflow Interrupt: Off
                 ; 0000 023B // Input Capture Interrupt: Off
                 ; 0000 023C // Compare A Match Interrupt: Off
                 ; 0000 023D // Compare B Match Interrupt: Off
                 ; 0000 023E TCCR1A=0x00;
00035e bdef      	OUT  0x2F,R30
                 ; 0000 023F TCCR1B=0x00;
00035f bdee      	OUT  0x2E,R30
                 ; 0000 0240 TCNT1H=0x00;
000360 bded      	OUT  0x2D,R30
                 ; 0000 0241 TCNT1L=0x00;
000361 bdec      	OUT  0x2C,R30
                 ; 0000 0242 ICR1H=0x00;
000362 bde7      	OUT  0x27,R30
                 ; 0000 0243 ICR1L=0x00;
000363 bde6      	OUT  0x26,R30
                 ; 0000 0244 OCR1AH=0x00;
000364 bdeb      	OUT  0x2B,R30
                 ; 0000 0245 OCR1AL=0x00;
000365 bdea      	OUT  0x2A,R30
                 ; 0000 0246 OCR1BH=0x00;
000366 bde9      	OUT  0x29,R30
                 ; 0000 0247 OCR1BL=0x00;
000367 bde8      	OUT  0x28,R30
                 ; 0000 0248 
                 ; 0000 0249 // Timer/Counter 2 initialization
                 ; 0000 024A // Clock source: System Clock
                 ; 0000 024B // Clock value: Timer2 Stopped
                 ; 0000 024C // Mode: Normal top=0xFF
                 ; 0000 024D // OC2 output: Disconnected
                 ; 0000 024E ASSR=0x00;
000368 bde2      	OUT  0x22,R30
                 ; 0000 024F TCCR2=0x00;
000369 bde5      	OUT  0x25,R30
                 ; 0000 0250 TCNT2=0x00;
00036a bde4      	OUT  0x24,R30
                 ; 0000 0251 OCR2=0x00;
00036b bde3      	OUT  0x23,R30
                 ; 0000 0252 
                 ; 0000 0253 // External Interrupt(s) initialization
                 ; 0000 0254 // INT0: Off
                 ; 0000 0255 // INT1: Off
                 ; 0000 0256 // INT2: Off
                 ; 0000 0257 MCUCR=0x00;
00036c bfe5      	OUT  0x35,R30
                 ; 0000 0258 MCUCSR=0x00;
00036d bfe4      	OUT  0x34,R30
                 ; 0000 0259 
                 ; 0000 025A // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 025B TIMSK=0x00;
00036e bfe9      	OUT  0x39,R30
                 ; 0000 025C 
                 ; 0000 025D // USART initialization
                 ; 0000 025E // USART disabled
                 ; 0000 025F UCSRB=0x00;
00036f b9ea      	OUT  0xA,R30
                 ; 0000 0260 
                 ; 0000 0261 // Analog Comparator initialization
                 ; 0000 0262 // Analog Comparator: Off
                 ; 0000 0263 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0264 ACSR=0x80;
000370 e8e0      	LDI  R30,LOW(128)
000371 b9e8      	OUT  0x8,R30
                 ; 0000 0265 SFIOR=0x00;
000372 e0e0      	LDI  R30,LOW(0)
000373 bfe0      	OUT  0x30,R30
                 ; 0000 0266 
                 ; 0000 0267 // ADC initialization
                 ; 0000 0268 // ADC disabled
                 ; 0000 0269 ADCSRA=0x00;
000374 b9e6      	OUT  0x6,R30
                 ; 0000 026A 
                 ; 0000 026B // SPI initialization
                 ; 0000 026C // SPI disabled
                 ; 0000 026D SPCR=0x00;
000375 b9ed      	OUT  0xD,R30
                 ; 0000 026E 
                 ; 0000 026F // TWI initialization
                 ; 0000 0270 // TWI disabled
                 ; 0000 0271 TWCR=0x00;
000376 bfe6      	OUT  0x36,R30
                 ; 0000 0272 
                 ; 0000 0273 // I2C Bus initialization
                 ; 0000 0274 i2c_init();
000377 d69d      	RCALL _i2c_init
                 ; 0000 0275 
                 ; 0000 0276 // DS1307 Real Time Clock initialization
                 ; 0000 0277 // Square wave output on pin SQW/OUT: Off
                 ; 0000 0278 // SQW/OUT pin state: 0
                 ; 0000 0279 rtc_init(0,0,0);
000378 d5ca      	RCALL SUBOPT_0x2E
000379 d5c9      	RCALL SUBOPT_0x2E
00037a d5c8      	RCALL SUBOPT_0x2E
00037b d3e6      	RCALL _rtc_init
                 ; 0000 027A 
                 ; 0000 027B // Alphanumeric LCD initialization
                 ; 0000 027C // Connections specified in the
                 ; 0000 027D // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 027E // RS - PORTA Bit 0
                 ; 0000 027F // RD - PORTA Bit 1
                 ; 0000 0280 // EN - PORTA Bit 2
                 ; 0000 0281 // D4 - PORTA Bit 4
                 ; 0000 0282 // D5 - PORTA Bit 5
                 ; 0000 0283 // D6 - PORTA Bit 6
                 ; 0000 0284 // D7 - PORTA Bit 7
                 ; 0000 0285 // Characters/line: 16
                 ; 0000 0286 lcd_init(16);
00037c e1e0      	LDI  R30,LOW(16)
00037d 93ea      	ST   -Y,R30
00037e d494      	RCALL _lcd_init
                 ; 0000 0287 lcd_clear();
00037f d54c      	RCALL SUBOPT_0x16
                 ; 0000 0288 lcd_gotoxy(0,0);
                 ; 0000 0289 
                 ; 0000 028A // UNCOMMENT BARIS INI JIKA INGIN SETTING RTC
                 ; 0000 028B //rtc_set_time(21,27,0);
                 ; 0000 028C //rtc_set_date(3,22,3,13);
                 ; 0000 028D 
                 ; 0000 028E 
                 ; 0000 028F // MATIKAN SEMUA RELAY
                 ; 0000 0290 BEBAN1=0;
000380 98ac      	CBI  0x15,4
                 ; 0000 0291 BEBAN2=0;
000381 98ad      	CBI  0x15,5
                 ; 0000 0292 BEBAN3=0;
000382 98ae      	CBI  0x15,6
                 ; 0000 0293 BEBAN4=0;
000383 98af      	CBI  0x15,7
                 ; 0000 0294 
                 ; 0000 0295 // AMBIL DATA DARI EEPROM
                 ; 0000 0296 jamTimerOn[0] = _jamTimerOn[0];
000384 d5c1      	RCALL SUBOPT_0x2F
                 ; 0000 0297 menitTimerOn[0] = _menitTimerOn[0];
                 ; 0000 0298 jamTimerOff[0] = _jamTimerOff[0];
                 ; 0000 0299 menitTimerOff[0] = _menitTimerOff[0];
                 ; 0000 029A jamTimerOn[1] = _jamTimerOn[1];
000385 d599      	RCALL SUBOPT_0x22
000386 d5d0      	RCALL SUBOPT_0x30
                 ; 0000 029B menitTimerOn[1] = _menitTimerOn[1];
000387 d5d3      	RCALL SUBOPT_0x31
                 ; 0000 029C jamTimerOff[1] = _jamTimerOff[1];
000388 d5d6      	RCALL SUBOPT_0x32
                 ; 0000 029D menitTimerOff[1] = _menitTimerOff[1];
000389 d5d9      	RCALL SUBOPT_0x33
                 ; 0000 029E jamTimerOn[2] = _jamTimerOn[2];
00038a d5a0      	RCALL SUBOPT_0x26
00038b d5db      	RCALL SUBOPT_0x34
                 ; 0000 029F menitTimerOn[2] = _menitTimerOn[2];
00038c d5de      	RCALL SUBOPT_0x35
                 ; 0000 02A0 jamTimerOff[2] = _jamTimerOff[2];
00038d d5e1      	RCALL SUBOPT_0x36
                 ; 0000 02A1 menitTimerOff[2] = _menitTimerOff[2];
00038e d5e4      	RCALL SUBOPT_0x37
                 ; 0000 02A2 jamTimerOn[3] = _jamTimerOn[3];
00038f d5a7      	RCALL SUBOPT_0x2A
000390 d5e6      	RCALL SUBOPT_0x38
                 ; 0000 02A3 menitTimerOn[3] = _menitTimerOn[3];
000391 d5e9      	RCALL SUBOPT_0x39
                 ; 0000 02A4 jamTimerOff[3] = _jamTimerOff[3];
000392 d5ec      	RCALL SUBOPT_0x3A
                 ; 0000 02A5 menitTimerOff[3] = _menitTimerOff[3];
000393 d5ef      	RCALL SUBOPT_0x3B
                 ; 0000 02A6 
                 ; 0000 02A7 while (1) {
                 _0x61:
                 ; 0000 02A8    char key = 0;
                 ; 0000 02A9    KEYPAD_OUT=0b11101111;
000394 9721      	SBIW R28,1
000395 e0e0      	LDI  R30,LOW(0)
000396 83e8      	ST   Y,R30
                 ;	key -> Y+0
000397 eeef      	LDI  R30,LOW(239)
000398 d4f5      	RCALL SUBOPT_0x5
                 ; 0000 02AA    delay_ms(30);
                 ; 0000 02AB    if(KEYPAD_IN.0==0) {
000399 9980      	SBIC 0x10,0
00039a c019      	RJMP _0x64
                 ; 0000 02AC       // AMBIL DATA DARI EEPROM
                 ; 0000 02AD       jamTimerOn[3] = _jamTimerOn[3];
00039b d59b      	RCALL SUBOPT_0x2A
00039c d5da      	RCALL SUBOPT_0x38
                 ; 0000 02AE       menitTimerOn[3] = _menitTimerOn[3];
00039d d5dd      	RCALL SUBOPT_0x39
                 ; 0000 02AF       jamTimerOff[3] = _jamTimerOff[3];
00039e d5e0      	RCALL SUBOPT_0x3A
                 ; 0000 02B0       menitTimerOff[3] = _menitTimerOff[3];
00039f d5e3      	RCALL SUBOPT_0x3B
                 ; 0000 02B1       sprintf(bufferLcd1,"T4 On  > %2d:%2d ",jamTimerOn[3],menitTimerOn[3]);
0003a0 d5e6      	RCALL SUBOPT_0x3C
                +
0003a1 ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 122 ) )
0003a2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 122 ) )
                 	__POINTW1FN _0x0,122
0003a3 d4d9      	RCALL SUBOPT_0x0
                +
0003a4 91e0 01f3+LDS R30 , _jamTimerOn + ( 3 )
                 	__GETB1MN _jamTimerOn,3
0003a6 d5e3      	RCALL SUBOPT_0x3D
                +
0003a7 91e0 01f7+LDS R30 , _menitTimerOn + ( 3 )
                 	__GETB1MN _menitTimerOn,3
0003a9 d5e0      	RCALL SUBOPT_0x3D
0003aa d5e4      	RCALL SUBOPT_0x3E
                 ; 0000 02B2       sprintf(bufferLcd2,"T4 Off > %2d:%2d ",jamTimerOff[3],menitTimerOff[3]);
                +
0003ab ece8     +LDI R30 , LOW ( 2 * _0x0 + ( 140 ) )
0003ac e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 140 ) )
                 	__POINTW1FN _0x0,140
0003ad d4cf      	RCALL SUBOPT_0x0
                +
0003ae 91e0 01fb+LDS R30 , _jamTimerOff + ( 3 )
                 	__GETB1MN _jamTimerOff,3
0003b0 d5d9      	RCALL SUBOPT_0x3D
                +
0003b1 91e0 01ff+LDS R30 , _menitTimerOff + ( 3 )
                 	__GETB1MN _menitTimerOff,3
0003b3 c04c      	RJMP _0xA0
                 ; 0000 02B3       lcd_clear();
                 ; 0000 02B4       lcd_gotoxy(0,0);
                 ; 0000 02B5       lcd_puts(bufferLcd1);
                 ; 0000 02B6       lcd_gotoxy(0,1);
                 ; 0000 02B7       lcd_puts(bufferLcd2);
                 ; 0000 02B8       delay_ms(2000);
                 ; 0000 02B9    }
                 ; 0000 02BA    else if(KEYPAD_IN.1==0) {
                 _0x64:
0003b4 9981      	SBIC 0x10,1
0003b5 c019      	RJMP _0x66
                 ; 0000 02BB       // AMBIL DATA DARI EEPROM
                 ; 0000 02BC       jamTimerOn[2] = _jamTimerOn[2];
0003b6 d574      	RCALL SUBOPT_0x26
0003b7 d5af      	RCALL SUBOPT_0x34
                 ; 0000 02BD       menitTimerOn[2] = _menitTimerOn[2];
0003b8 d5b2      	RCALL SUBOPT_0x35
                 ; 0000 02BE       jamTimerOff[2] = _jamTimerOff[2];
0003b9 d5b5      	RCALL SUBOPT_0x36
                 ; 0000 02BF       menitTimerOff[2] = _menitTimerOff[2];
0003ba d5b8      	RCALL SUBOPT_0x37
                 ; 0000 02C0       sprintf(bufferLcd1,"T3 On  > %2d:%2d ",jamTimerOn[2],menitTimerOn[2]);
0003bb d5cb      	RCALL SUBOPT_0x3C
                +
0003bc edea     +LDI R30 , LOW ( 2 * _0x0 + ( 158 ) )
0003bd e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 158 ) )
                 	__POINTW1FN _0x0,158
0003be d4be      	RCALL SUBOPT_0x0
                +
0003bf 91e0 01f2+LDS R30 , _jamTimerOn + ( 2 )
                 	__GETB1MN _jamTimerOn,2
0003c1 d5c8      	RCALL SUBOPT_0x3D
                +
0003c2 91e0 01f6+LDS R30 , _menitTimerOn + ( 2 )
                 	__GETB1MN _menitTimerOn,2
0003c4 d5c5      	RCALL SUBOPT_0x3D
0003c5 d5c9      	RCALL SUBOPT_0x3E
                 ; 0000 02C1       sprintf(bufferLcd2,"T3 Off > %2d:%2d ",jamTimerOff[2],menitTimerOff[2]);
                +
0003c6 eeec     +LDI R30 , LOW ( 2 * _0x0 + ( 176 ) )
0003c7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 176 ) )
                 	__POINTW1FN _0x0,176
0003c8 d4b4      	RCALL SUBOPT_0x0
                +
0003c9 91e0 01fa+LDS R30 , _jamTimerOff + ( 2 )
                 	__GETB1MN _jamTimerOff,2
0003cb d5be      	RCALL SUBOPT_0x3D
                +
0003cc 91e0 01fe+LDS R30 , _menitTimerOff + ( 2 )
                 	__GETB1MN _menitTimerOff,2
0003ce c031      	RJMP _0xA0
                 ; 0000 02C2       lcd_clear();
                 ; 0000 02C3       lcd_gotoxy(0,0);
                 ; 0000 02C4       lcd_puts(bufferLcd1);
                 ; 0000 02C5       lcd_gotoxy(0,1);
                 ; 0000 02C6       lcd_puts(bufferLcd2);
                 ; 0000 02C7       delay_ms(2000);
                 ; 0000 02C8    }
                 ; 0000 02C9    else if(KEYPAD_IN.2==0) {
                 _0x66:
0003cf 9982      	SBIC 0x10,2
0003d0 c019      	RJMP _0x68
                 ; 0000 02CA       // AMBIL DATA DARI EEPROM
                 ; 0000 02CB       jamTimerOn[1] = _jamTimerOn[1];
0003d1 d54d      	RCALL SUBOPT_0x22
0003d2 d584      	RCALL SUBOPT_0x30
                 ; 0000 02CC       menitTimerOn[1] = _menitTimerOn[1];
0003d3 d587      	RCALL SUBOPT_0x31
                 ; 0000 02CD       jamTimerOff[1] = _jamTimerOff[1];
0003d4 d58a      	RCALL SUBOPT_0x32
                 ; 0000 02CE       menitTimerOff[1] = _menitTimerOff[1];
0003d5 d58d      	RCALL SUBOPT_0x33
                 ; 0000 02CF       sprintf(bufferLcd1,"T2 On  > %2d:%2d ",jamTimerOn[1],menitTimerOn[1]);
0003d6 d5b0      	RCALL SUBOPT_0x3C
                +
0003d7 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 194 ) )
0003d8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 194 ) )
                 	__POINTW1FN _0x0,194
0003d9 d4a3      	RCALL SUBOPT_0x0
                +
0003da 91e0 01f1+LDS R30 , _jamTimerOn + ( 1 )
                 	__GETB1MN _jamTimerOn,1
0003dc d5ad      	RCALL SUBOPT_0x3D
                +
0003dd 91e0 01f5+LDS R30 , _menitTimerOn + ( 1 )
                 	__GETB1MN _menitTimerOn,1
0003df d5aa      	RCALL SUBOPT_0x3D
0003e0 d5ae      	RCALL SUBOPT_0x3E
                 ; 0000 02D0       sprintf(bufferLcd2,"T2 Off > %2d:%2d ",jamTimerOff[1],menitTimerOff[1]);
                +
0003e1 e1e0     +LDI R30 , LOW ( 2 * _0x0 + ( 212 ) )
0003e2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 212 ) )
                 	__POINTW1FN _0x0,212
0003e3 d499      	RCALL SUBOPT_0x0
                +
0003e4 91e0 01f9+LDS R30 , _jamTimerOff + ( 1 )
                 	__GETB1MN _jamTimerOff,1
0003e6 d5a3      	RCALL SUBOPT_0x3D
                +
0003e7 91e0 01fd+LDS R30 , _menitTimerOff + ( 1 )
                 	__GETB1MN _menitTimerOff,1
0003e9 c016      	RJMP _0xA0
                 ; 0000 02D1       lcd_clear();
                 ; 0000 02D2       lcd_gotoxy(0,0);
                 ; 0000 02D3       lcd_puts(bufferLcd1);
                 ; 0000 02D4       lcd_gotoxy(0,1);
                 ; 0000 02D5       lcd_puts(bufferLcd2);
                 ; 0000 02D6       delay_ms(2000);
                 ; 0000 02D7    }
                 ; 0000 02D8    else if(KEYPAD_IN.3==0) {
                 _0x68:
0003ea 9983      	SBIC 0x10,3
0003eb c024      	RJMP _0x6A
                 ; 0000 02D9       // AMBIL DATA DARI EEPROM
                 ; 0000 02DA       jamTimerOn[0] = _jamTimerOn[0];
0003ec d559      	RCALL SUBOPT_0x2F
                 ; 0000 02DB       menitTimerOn[0] = _menitTimerOn[0];
                 ; 0000 02DC       jamTimerOff[0] = _jamTimerOff[0];
                 ; 0000 02DD       menitTimerOff[0] = _menitTimerOff[0];
                 ; 0000 02DE       sprintf(bufferLcd1,"T1 On  > %2d:%2d ",jamTimerOn[0],menitTimerOn[0]);
0003ed d599      	RCALL SUBOPT_0x3C
                +
0003ee e2e2     +LDI R30 , LOW ( 2 * _0x0 + ( 230 ) )
0003ef e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 230 ) )
                 	__POINTW1FN _0x0,230
0003f0 d48c      	RCALL SUBOPT_0x0
0003f1 91e0 01f0 	LDS  R30,_jamTimerOn
0003f3 d596      	RCALL SUBOPT_0x3D
0003f4 91e0 01f4 	LDS  R30,_menitTimerOn
0003f6 d593      	RCALL SUBOPT_0x3D
0003f7 d597      	RCALL SUBOPT_0x3E
                 ; 0000 02DF       sprintf(bufferLcd2,"T1 Off > %2d:%2d ",jamTimerOff[0],menitTimerOff[0]);
                +
0003f8 e3e4     +LDI R30 , LOW ( 2 * _0x0 + ( 248 ) )
0003f9 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 248 ) )
                 	__POINTW1FN _0x0,248
0003fa d482      	RCALL SUBOPT_0x0
0003fb 91e0 01f8 	LDS  R30,_jamTimerOff
0003fd d58c      	RCALL SUBOPT_0x3D
0003fe 91e0 01fc 	LDS  R30,_menitTimerOff
                 _0xA0:
000400 27ff      	CLR  R31
000401 2766      	CLR  R22
000402 2777      	CLR  R23
000403 d687      	RCALL __PUTPARD1
000404 e088      	LDI  R24,8
000405 d1e4      	RCALL _sprintf
000406 962c      	ADIW R28,12
                 ; 0000 02E0       lcd_clear();
000407 d4c4      	RCALL SUBOPT_0x16
                 ; 0000 02E1       lcd_gotoxy(0,0);
                 ; 0000 02E2       lcd_puts(bufferLcd1);
000408 e1e0      	LDI  R30,LOW(_bufferLcd1)
000409 e0f2      	LDI  R31,HIGH(_bufferLcd1)
00040a d4ac      	RCALL SUBOPT_0xF
                 ; 0000 02E3       lcd_gotoxy(0,1);
00040b d537      	RCALL SUBOPT_0x2E
00040c d588      	RCALL SUBOPT_0x3F
                 ; 0000 02E4       lcd_puts(bufferLcd2);
                 ; 0000 02E5       delay_ms(2000);
00040d ede0      	LDI  R30,LOW(2000)
00040e e0f7      	LDI  R31,HIGH(2000)
00040f d49d      	RCALL SUBOPT_0xD
                 ; 0000 02E6    }
                 ; 0000 02E7    if(!SW_BEBAN1) {
                 _0x6A:
000410 99b0      	SBIC 0x16,0
000411 c002      	RJMP _0x6B
                 ; 0000 02E8       menuSetting1();
000412 de46      	RCALL _menuSetting1
                 ; 0000 02E9    }
                 ; 0000 02EA    else if(!SW_BEBAN2) {
000413 c090      	RJMP _0x6C
                 _0x6B:
000414 99b1      	SBIC 0x16,1
000415 c002      	RJMP _0x6D
                 ; 0000 02EB       menuSetting2();
000416 de7d      	RCALL _menuSetting2
                 ; 0000 02EC    }
                 ; 0000 02ED    else if(!SW_BEBAN3) {
000417 c08c      	RJMP _0x6E
                 _0x6D:
000418 99b2      	SBIC 0x16,2
000419 c002      	RJMP _0x6F
                 ; 0000 02EE       menuSetting3();
00041a deb4      	RCALL _menuSetting3
                 ; 0000 02EF    }
                 ; 0000 02F0    else if(!SW_BEBAN4) {
00041b c088      	RJMP _0x70
                 _0x6F:
00041c 99b3      	SBIC 0x16,3
00041d c002      	RJMP _0x71
                 ; 0000 02F1       menuSetting4();
00041e deeb      	RCALL _menuSetting4
                 ; 0000 02F2    }
                 ; 0000 02F3    else{
00041f c084      	RJMP _0x72
                 _0x71:
                 ; 0000 02F4       lcd_clear();
000420 d3c2      	RCALL _lcd_clear
                 ; 0000 02F5       bacaRTC();
000421 dcf9      	RCALL _bacaRTC
                 ; 0000 02F6       sprintf(bufferLcd1,"Jam => %2d:%2d:%2d ",jam,menit,detik);
000422 d564      	RCALL SUBOPT_0x3C
                +
000423 e4e6     +LDI R30 , LOW ( 2 * _0x0 + ( 266 ) )
000424 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 266 ) )
                 	__POINTW1FN _0x0,266
000425 d457      	RCALL SUBOPT_0x0
000426 2de5      	MOV  R30,R5
000427 d562      	RCALL SUBOPT_0x3D
000428 2de4      	MOV  R30,R4
000429 d560      	RCALL SUBOPT_0x3D
00042a 2de7      	MOV  R30,R7
00042b d55e      	RCALL SUBOPT_0x3D
00042c d56e      	RCALL SUBOPT_0x40
                 ; 0000 02F7       lcd_gotoxy(0,0);
00042d d515      	RCALL SUBOPT_0x2E
00042e d3a8      	RCALL _lcd_gotoxy
                 ; 0000 02F8       lcd_puts(bufferLcd1);
00042f e1e0      	LDI  R30,LOW(_bufferLcd1)
000430 e0f2      	LDI  R31,HIGH(_bufferLcd1)
000431 d485      	RCALL SUBOPT_0xF
                 ; 0000 02F9       sprintf(bufferLcd2,"Tgl => %2d/%2d/%2d ",tanggal,bulan,tahun);
000432 e2e0      	LDI  R30,LOW(_bufferLcd2)
000433 e0f2      	LDI  R31,HIGH(_bufferLcd2)
000434 d448      	RCALL SUBOPT_0x0
                +
000435 e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 286 ) )
000436 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 286 ) )
                 	__POINTW1FN _0x0,286
000437 d445      	RCALL SUBOPT_0x0
000438 2de9      	MOV  R30,R9
000439 d550      	RCALL SUBOPT_0x3D
00043a 2de8      	MOV  R30,R8
00043b d54e      	RCALL SUBOPT_0x3D
00043c 2deb      	MOV  R30,R11
00043d d54c      	RCALL SUBOPT_0x3D
00043e d55c      	RCALL SUBOPT_0x40
                 ; 0000 02FA       lcd_gotoxy(0,1);
00043f d555      	RCALL SUBOPT_0x3F
                 ; 0000 02FB       lcd_puts(bufferLcd2);
                 ; 0000 02FC 
                 ; 0000 02FD       // AMBIL DATA DARI EEPROM
                 ; 0000 02FE       jamTimerOn[0] = _jamTimerOn[0];
000440 d505      	RCALL SUBOPT_0x2F
                 ; 0000 02FF       menitTimerOn[0] = _menitTimerOn[0];
                 ; 0000 0300       jamTimerOff[0] = _jamTimerOff[0];
                 ; 0000 0301       menitTimerOff[0] = _menitTimerOff[0];
                 ; 0000 0302 
                 ; 0000 0303       if(jam==jamTimerOn[0]&&menit==menitTimerOn[0]) {
000441 91e0 01f0 	LDS  R30,_jamTimerOn
000443 15e5      	CP   R30,R5
000444 f421      	BRNE _0x74
000445 91e0 01f4 	LDS  R30,_menitTimerOn
000447 15e4      	CP   R30,R4
000448 f009      	BREQ _0x75
                 _0x74:
000449 c002      	RJMP _0x73
                 _0x75:
                 ; 0000 0304          BEBAN1 = 1;
00044a 9aac      	SBI  0x15,4
                 ; 0000 0305       }
                 ; 0000 0306       else if(jam==jamTimerOff[0]&&menit==menitTimerOff[0]) {
00044b c00a      	RJMP _0x78
                 _0x73:
00044c 91e0 01f8 	LDS  R30,_jamTimerOff
00044e 15e5      	CP   R30,R5
00044f f421      	BRNE _0x7A
000450 91e0 01fc 	LDS  R30,_menitTimerOff
000452 15e4      	CP   R30,R4
000453 f009      	BREQ _0x7B
                 _0x7A:
000454 c001      	RJMP _0x79
                 _0x7B:
                 ; 0000 0307          BEBAN1 = 0;
000455 98ac      	CBI  0x15,4
                 ; 0000 0308       }
                 ; 0000 0309 
                 ; 0000 030A       // AMBIL DATA DARI EEPROM
                 ; 0000 030B       jamTimerOn[1] = _jamTimerOn[1];
                 _0x79:
                 _0x78:
000456 d4c8      	RCALL SUBOPT_0x22
000457 d4ff      	RCALL SUBOPT_0x30
                 ; 0000 030C       menitTimerOn[1] = _menitTimerOn[1];
000458 d502      	RCALL SUBOPT_0x31
                 ; 0000 030D       jamTimerOff[1] = _jamTimerOff[1];
000459 d505      	RCALL SUBOPT_0x32
                 ; 0000 030E       menitTimerOff[1] = _menitTimerOff[1];
00045a d508      	RCALL SUBOPT_0x33
                 ; 0000 030F 
                 ; 0000 0310       if(jam==jamTimerOn[1]&&menit==menitTimerOn[1]) {
                +
00045b 91e0 01f1+LDS R30 , _jamTimerOn + ( 1 )
                 	__GETB1MN _jamTimerOn,1
00045d 15e5      	CP   R30,R5
00045e f421      	BRNE _0x7F
                +
00045f 91e0 01f5+LDS R30 , _menitTimerOn + ( 1 )
                 	__GETB1MN _menitTimerOn,1
000461 15e4      	CP   R30,R4
000462 f009      	BREQ _0x80
                 _0x7F:
000463 c002      	RJMP _0x7E
                 _0x80:
                 ; 0000 0311          BEBAN2 = 1;
000464 9aad      	SBI  0x15,5
                 ; 0000 0312       }
                 ; 0000 0313       else if(jam==jamTimerOff[1]&&menit==menitTimerOff[1]){
000465 c00a      	RJMP _0x83
                 _0x7E:
                +
000466 91e0 01f9+LDS R30 , _jamTimerOff + ( 1 )
                 	__GETB1MN _jamTimerOff,1
000468 15e5      	CP   R30,R5
000469 f421      	BRNE _0x85
                +
00046a 91e0 01fd+LDS R30 , _menitTimerOff + ( 1 )
                 	__GETB1MN _menitTimerOff,1
00046c 15e4      	CP   R30,R4
00046d f009      	BREQ _0x86
                 _0x85:
00046e c001      	RJMP _0x84
                 _0x86:
                 ; 0000 0314          BEBAN2 = 0;
00046f 98ad      	CBI  0x15,5
                 ; 0000 0315       }
                 ; 0000 0316 
                 ; 0000 0317       // AMBIL DATA DARI EEPROM
                 ; 0000 0318       jamTimerOn[2] = _jamTimerOn[2];
                 _0x84:
                 _0x83:
000470 d4ba      	RCALL SUBOPT_0x26
000471 d4f5      	RCALL SUBOPT_0x34
                 ; 0000 0319       menitTimerOn[2] = _menitTimerOn[2];
000472 d4f8      	RCALL SUBOPT_0x35
                 ; 0000 031A       jamTimerOff[2] = _jamTimerOff[2];
000473 d4fb      	RCALL SUBOPT_0x36
                 ; 0000 031B       menitTimerOff[2] = _menitTimerOff[2];
000474 d4fe      	RCALL SUBOPT_0x37
                 ; 0000 031C       if(jam==jamTimerOn[2]&&menit==_menitTimerOn[2]) {
                +
000475 91e0 01f2+LDS R30 , _jamTimerOn + ( 2 )
                 	__GETB1MN _jamTimerOn,2
000477 15e5      	CP   R30,R5
000478 f421      	BRNE _0x8A
000479 d4b4      	RCALL SUBOPT_0x27
00047a d615      	RCALL __EEPROMRDB
00047b 15e4      	CP   R30,R4
00047c f009      	BREQ _0x8B
                 _0x8A:
00047d c002      	RJMP _0x89
                 _0x8B:
                 ; 0000 031D          BEBAN3 = 1;
00047e 9aae      	SBI  0x15,6
                 ; 0000 031E       }
                 ; 0000 031F       else if(jam==jamTimerOff[2]&&menit==_menitTimerOff[2]){
00047f c00a      	RJMP _0x8E
                 _0x89:
                +
000480 91e0 01fa+LDS R30 , _jamTimerOff + ( 2 )
                 	__GETB1MN _jamTimerOff,2
000482 15e5      	CP   R30,R5
000483 f421      	BRNE _0x90
000484 d4af      	RCALL SUBOPT_0x29
000485 d60a      	RCALL __EEPROMRDB
000486 15e4      	CP   R30,R4
000487 f009      	BREQ _0x91
                 _0x90:
000488 c001      	RJMP _0x8F
                 _0x91:
                 ; 0000 0320          BEBAN3 = 0;
000489 98ae      	CBI  0x15,6
                 ; 0000 0321       }
                 ; 0000 0322 
                 ; 0000 0323       // AMBIL DATA DARI EEPROM
                 ; 0000 0324       jamTimerOn[3] = _jamTimerOn[3];
                 _0x8F:
                 _0x8E:
00048a d4ac      	RCALL SUBOPT_0x2A
00048b d4eb      	RCALL SUBOPT_0x38
                 ; 0000 0325       menitTimerOn[3] = _menitTimerOn[3];
00048c d4ee      	RCALL SUBOPT_0x39
                 ; 0000 0326       jamTimerOff[3] = _jamTimerOff[3];
00048d d4f1      	RCALL SUBOPT_0x3A
                 ; 0000 0327       menitTimerOff[3] = _menitTimerOff[3];
00048e d4f4      	RCALL SUBOPT_0x3B
                 ; 0000 0328 
                 ; 0000 0329       if(jam==jamTimerOn[3]&&menit==menitTimerOn[3]) {
                +
00048f 91e0 01f3+LDS R30 , _jamTimerOn + ( 3 )
                 	__GETB1MN _jamTimerOn,3
000491 15e5      	CP   R30,R5
000492 f421      	BRNE _0x95
                +
000493 91e0 01f7+LDS R30 , _menitTimerOn + ( 3 )
                 	__GETB1MN _menitTimerOn,3
000495 15e4      	CP   R30,R4
000496 f009      	BREQ _0x96
                 _0x95:
000497 c002      	RJMP _0x94
                 _0x96:
                 ; 0000 032A          BEBAN4 = 1;
000498 9aaf      	SBI  0x15,7
                 ; 0000 032B       }
                 ; 0000 032C       else if(jam==jamTimerOff[3]&&menit==menitTimerOff[3]) {
000499 c00a      	RJMP _0x99
                 _0x94:
                +
00049a 91e0 01fb+LDS R30 , _jamTimerOff + ( 3 )
                 	__GETB1MN _jamTimerOff,3
00049c 15e5      	CP   R30,R5
00049d f421      	BRNE _0x9B
                +
00049e 91e0 01ff+LDS R30 , _menitTimerOff + ( 3 )
                 	__GETB1MN _menitTimerOff,3
0004a0 15e4      	CP   R30,R4
0004a1 f009      	BREQ _0x9C
                 _0x9B:
0004a2 c001      	RJMP _0x9A
                 _0x9C:
                 ; 0000 032D          BEBAN4 = 0;
0004a3 98af      	CBI  0x15,7
                 ; 0000 032E       }
                 ; 0000 032F    }
                 _0x9A:
                 _0x99:
                 _0x72:
                 _0x70:
                 _0x6E:
                 _0x6C:
                 ; 0000 0330    delay_ms(500);
0004a4 efe4      	LDI  R30,LOW(500)
0004a5 e0f1      	LDI  R31,HIGH(500)
0004a6 d406      	RCALL SUBOPT_0xD
                 ; 0000 0331 }
0004a7 9621      	ADIW R28,1
0004a8 ceeb      	RJMP _0x61
                 ; 0000 0332 }
                 _0x9F:
0004a9 cfff      	RJMP _0x9F
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0004aa d606      	RCALL __SAVELOCR2
0004ab d4f3      	RCALL SUBOPT_0x41
0004ac 9612      	ADIW R26,2
0004ad d4f4      	RCALL SUBOPT_0x42
0004ae f0f1      	BREQ _0x2000010
0004af d4ef      	RCALL SUBOPT_0x41
0004b0 d4f4      	RCALL SUBOPT_0x43
0004b1 018f      	MOVW R16,R30
0004b2 9730      	SBIW R30,0
0004b3 f061      	BREQ _0x2000012
                +
0004b4 3002     +CPI R16 , LOW ( 2 )
0004b5 e0e0     +LDI R30 , HIGH ( 2 )
0004b6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0004b7 f0a0      	BRLO _0x2000013
0004b8 01f8      	MOVW R30,R16
0004b9 9731      	SBIW R30,1
0004ba 018f      	MOVW R16,R30
                +
0004bb 81aa     +LDD R26 , Y + 2
0004bc 81bb     +LDD R27 , Y + 2 + 1
0004bd 9614     +ADIW R26 , 4
0004be 93ed     +ST X + , R30
0004bf 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0004c0 d4de      	RCALL SUBOPT_0x41
0004c1 9612      	ADIW R26,2
0004c2 d4e5      	RCALL SUBOPT_0x44
0004c3 9731      	SBIW R30,1
0004c4 81ac      	LDD  R26,Y+4
0004c5 83a0      	STD  Z+0,R26
0004c6 d4d8      	RCALL SUBOPT_0x41
0004c7 d5bb      	RCALL __GETW1P
0004c8 23ff      	TST  R31
0004c9 f012      	BRMI _0x2000014
0004ca d4d4      	RCALL SUBOPT_0x41
0004cb d4dc      	RCALL SUBOPT_0x44
                 _0x2000014:
                 _0x2000013:
0004cc c004      	RJMP _0x2000015
                 _0x2000010:
0004cd d4d1      	RCALL SUBOPT_0x41
0004ce d4df      	RCALL SUBOPT_0x45
0004cf 93ed      	ST   X+,R30
0004d0 93fc      	ST   X,R31
                 _0x2000015:
0004d1 d5e6      	RCALL __LOADLOCR2
0004d2 c160      	RJMP _0x20C0006
                 __print_G100:
0004d3 9726      	SBIW R28,6
0004d4 d5d8      	RCALL __SAVELOCR6
0004d5 e010      	LDI  R17,0
0004d6 85ac      	LDD  R26,Y+12
0004d7 85bd      	LDD  R27,Y+12+1
0004d8 e0e0      	LDI  R30,LOW(0)
0004d9 e0f0      	LDI  R31,HIGH(0)
0004da 93ed      	ST   X+,R30
0004db 93fc      	ST   X,R31
                 _0x2000016:
0004dc 89ea      	LDD  R30,Y+18
0004dd 89fb      	LDD  R31,Y+18+1
0004de 9631      	ADIW R30,1
0004df 8bea      	STD  Y+18,R30
0004e0 8bfb      	STD  Y+18+1,R31
0004e1 9731      	SBIW R30,1
0004e2 91e4      	LPM  R30,Z
0004e3 2f2e      	MOV  R18,R30
0004e4 30e0      	CPI  R30,0
0004e5 f409      	BRNE PC+2
0004e6 c0fd      	RJMP _0x2000018
0004e7 2fe1      	MOV  R30,R17
0004e8 30e0      	CPI  R30,0
0004e9 f431      	BRNE _0x200001C
0004ea 3225      	CPI  R18,37
0004eb f411      	BRNE _0x200001D
0004ec e011      	LDI  R17,LOW(1)
0004ed c001      	RJMP _0x200001E
                 _0x200001D:
0004ee d4c2      	RCALL SUBOPT_0x46
                 _0x200001E:
0004ef c0f3      	RJMP _0x200001B
                 _0x200001C:
0004f0 30e1      	CPI  R30,LOW(0x1)
0004f1 f4a1      	BRNE _0x200001F
0004f2 3225      	CPI  R18,37
0004f3 f411      	BRNE _0x2000020
0004f4 d4bc      	RCALL SUBOPT_0x46
0004f5 c0ec      	RJMP _0x20000C9
                 _0x2000020:
0004f6 e012      	LDI  R17,LOW(2)
0004f7 e040      	LDI  R20,LOW(0)
0004f8 e000      	LDI  R16,LOW(0)
0004f9 322d      	CPI  R18,45
0004fa f411      	BRNE _0x2000021
0004fb e001      	LDI  R16,LOW(1)
0004fc c0e6      	RJMP _0x200001B
                 _0x2000021:
0004fd 322b      	CPI  R18,43
0004fe f411      	BRNE _0x2000022
0004ff e24b      	LDI  R20,LOW(43)
000500 c0e2      	RJMP _0x200001B
                 _0x2000022:
000501 3220      	CPI  R18,32
000502 f411      	BRNE _0x2000023
000503 e240      	LDI  R20,LOW(32)
000504 c0de      	RJMP _0x200001B
                 _0x2000023:
000505 c002      	RJMP _0x2000024
                 _0x200001F:
000506 30e2      	CPI  R30,LOW(0x2)
000507 f439      	BRNE _0x2000025
                 _0x2000024:
000508 e050      	LDI  R21,LOW(0)
000509 e013      	LDI  R17,LOW(3)
00050a 3320      	CPI  R18,48
00050b f411      	BRNE _0x2000026
00050c 6800      	ORI  R16,LOW(128)
00050d c0d5      	RJMP _0x200001B
                 _0x2000026:
00050e c003      	RJMP _0x2000027
                 _0x2000025:
00050f 30e3      	CPI  R30,LOW(0x3)
000510 f009      	BREQ PC+2
000511 c0d1      	RJMP _0x200001B
                 _0x2000027:
000512 3320      	CPI  R18,48
000513 f010      	BRLO _0x200002A
000514 332a      	CPI  R18,58
000515 f008      	BRLO _0x200002B
                 _0x200002A:
000516 c007      	RJMP _0x2000029
                 _0x200002B:
000517 e0aa      	LDI  R26,LOW(10)
000518 9f5a      	MUL  R21,R26
000519 2d50      	MOV  R21,R0
00051a 2fe2      	MOV  R30,R18
00051b 53e0      	SUBI R30,LOW(48)
00051c 0f5e      	ADD  R21,R30
00051d c0c5      	RJMP _0x200001B
                 _0x2000029:
00051e 2fe2      	MOV  R30,R18
00051f 36e3      	CPI  R30,LOW(0x63)
000520 f439      	BRNE _0x200002F
000521 d497      	RCALL SUBOPT_0x47
000522 d499      	RCALL SUBOPT_0x48
000523 d495      	RCALL SUBOPT_0x47
000524 81a4      	LDD  R26,Z+4
000525 93aa      	ST   -Y,R26
000526 d499      	RCALL SUBOPT_0x49
000527 c0ba      	RJMP _0x2000030
                 _0x200002F:
000528 37e3      	CPI  R30,LOW(0x73)
000529 f431      	BRNE _0x2000032
00052a d49c      	RCALL SUBOPT_0x4A
00052b d49d      	RCALL SUBOPT_0x4B
00052c d49f      	RCALL SUBOPT_0x4C
00052d d32e      	RCALL _strlen
00052e 2f1e      	MOV  R17,R30
00052f c008      	RJMP _0x2000033
                 _0x2000032:
000530 37e0      	CPI  R30,LOW(0x70)
000531 f451      	BRNE _0x2000035
000532 d494      	RCALL SUBOPT_0x4A
000533 d495      	RCALL SUBOPT_0x4B
000534 d497      	RCALL SUBOPT_0x4C
000535 d330      	RCALL _strlenf
000536 2f1e      	MOV  R17,R30
000537 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000538 6002      	ORI  R16,LOW(2)
000539 770f      	ANDI R16,LOW(127)
00053a e030      	LDI  R19,LOW(0)
00053b c02e      	RJMP _0x2000036
                 _0x2000035:
00053c 36e4      	CPI  R30,LOW(0x64)
00053d f011      	BREQ _0x2000039
00053e 36e9      	CPI  R30,LOW(0x69)
00053f f411      	BRNE _0x200003A
                 _0x2000039:
000540 6004      	ORI  R16,LOW(4)
000541 c002      	RJMP _0x200003B
                 _0x200003A:
000542 37e5      	CPI  R30,LOW(0x75)
000543 f429      	BRNE _0x200003C
                 _0x200003B:
000544 e2ea      	LDI  R30,LOW(_tbl10_G100*2)
000545 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000546 d488      	RCALL SUBOPT_0x4D
000547 e015      	LDI  R17,LOW(5)
000548 c00b      	RJMP _0x200003D
                 _0x200003C:
000549 35e8      	CPI  R30,LOW(0x58)
00054a f411      	BRNE _0x200003F
00054b 6008      	ORI  R16,LOW(8)
00054c c003      	RJMP _0x2000040
                 _0x200003F:
00054d 37e8      	CPI  R30,LOW(0x78)
00054e f009      	BREQ PC+2
00054f c092      	RJMP _0x2000071
                 _0x2000040:
000550 e3e4      	LDI  R30,LOW(_tbl16_G100*2)
000551 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000552 d47c      	RCALL SUBOPT_0x4D
000553 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000554 ff02      	SBRS R16,2
000555 c011      	RJMP _0x2000042
000556 d470      	RCALL SUBOPT_0x4A
000557 d471      	RCALL SUBOPT_0x4B
000558 d479      	RCALL SUBOPT_0x4E
000559 85ab      	LDD  R26,Y+11
00055a 23aa      	TST  R26
00055b f42a      	BRPL _0x2000043
00055c 85ea      	LDD  R30,Y+10
00055d 85fb      	LDD  R31,Y+10+1
00055e d518      	RCALL __ANEGW1
00055f d472      	RCALL SUBOPT_0x4E
000560 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000561 3040      	CPI  R20,0
000562 f011      	BREQ _0x2000044
000563 5f1f      	SUBI R17,-LOW(1)
000564 c001      	RJMP _0x2000045
                 _0x2000044:
000565 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000566 c003      	RJMP _0x2000046
                 _0x2000042:
000567 d45f      	RCALL SUBOPT_0x4A
000568 d460      	RCALL SUBOPT_0x4B
000569 d468      	RCALL SUBOPT_0x4E
                 _0x2000046:
                 _0x2000036:
00056a fd00      	SBRC R16,0
00056b c010      	RJMP _0x2000047
                 _0x2000048:
00056c 1715      	CP   R17,R21
00056d f470      	BRSH _0x200004A
00056e ff07      	SBRS R16,7
00056f c008      	RJMP _0x200004B
000570 ff02      	SBRS R16,2
000571 c004      	RJMP _0x200004C
000572 7f0b      	ANDI R16,LOW(251)
000573 2f24      	MOV  R18,R20
000574 5011      	SUBI R17,LOW(1)
000575 c001      	RJMP _0x200004D
                 _0x200004C:
000576 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000577 c001      	RJMP _0x200004E
                 _0x200004B:
000578 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000579 d437      	RCALL SUBOPT_0x46
00057a 5051      	SUBI R21,LOW(1)
00057b cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00057c 2f31      	MOV  R19,R17
00057d ff01      	SBRS R16,1
00057e c014      	RJMP _0x200004F
                 _0x2000050:
00057f 3030      	CPI  R19,0
000580 f089      	BREQ _0x2000052
000581 ff03      	SBRS R16,3
000582 c005      	RJMP _0x2000053
000583 81ee      	LDD  R30,Y+6
000584 81ff      	LDD  R31,Y+6+1
000585 9125      	LPM  R18,Z+
000586 d448      	RCALL SUBOPT_0x4D
000587 c004      	RJMP _0x2000054
                 _0x2000053:
000588 d44c      	RCALL SUBOPT_0x4F
000589 912d      	LD   R18,X+
00058a 83ae      	STD  Y+6,R26
00058b 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00058c d424      	RCALL SUBOPT_0x46
00058d 3050      	CPI  R21,0
00058e f009      	BREQ _0x2000055
00058f 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000590 5031      	SUBI R19,LOW(1)
000591 cfed      	RJMP _0x2000050
                 _0x2000052:
000592 c046      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000593 e320      	LDI  R18,LOW(48)
000594 81ee      	LDD  R30,Y+6
000595 81ff      	LDD  R31,Y+6+1
000596 d4f0      	RCALL __GETW1PF
000597 87e8      	STD  Y+8,R30
000598 87f9      	STD  Y+8+1,R31
000599 81ee      	LDD  R30,Y+6
00059a 81ff      	LDD  R31,Y+6+1
00059b 9632      	ADIW R30,2
00059c d432      	RCALL SUBOPT_0x4D
                 _0x200005A:
00059d 85e8      	LDD  R30,Y+8
00059e 85f9      	LDD  R31,Y+8+1
00059f 85aa      	LDD  R26,Y+10
0005a0 85bb      	LDD  R27,Y+10+1
0005a1 17ae      	CP   R26,R30
0005a2 07bf      	CPC  R27,R31
0005a3 f048      	BRLO _0x200005C
0005a4 5f2f      	SUBI R18,-LOW(1)
0005a5 85a8      	LDD  R26,Y+8
0005a6 85b9      	LDD  R27,Y+8+1
0005a7 85ea      	LDD  R30,Y+10
0005a8 85fb      	LDD  R31,Y+10+1
0005a9 1bea      	SUB  R30,R26
0005aa 0bfb      	SBC  R31,R27
0005ab d426      	RCALL SUBOPT_0x4E
0005ac cff0      	RJMP _0x200005A
                 _0x200005C:
0005ad 332a      	CPI  R18,58
0005ae f028      	BRLO _0x200005D
0005af ff03      	SBRS R16,3
0005b0 c002      	RJMP _0x200005E
0005b1 5f29      	SUBI R18,-LOW(7)
0005b2 c001      	RJMP _0x200005F
                 _0x200005E:
0005b3 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0005b4 fd04      	SBRC R16,4
0005b5 c019      	RJMP _0x2000061
0005b6 3321      	CPI  R18,49
0005b7 f420      	BRSH _0x2000063
0005b8 85a8      	LDD  R26,Y+8
0005b9 85b9      	LDD  R27,Y+8+1
0005ba 9711      	SBIW R26,1
0005bb f409      	BRNE _0x2000062
                 _0x2000063:
0005bc c009      	RJMP _0x20000CA
                 _0x2000062:
0005bd 1753      	CP   R21,R19
0005be f010      	BRLO _0x2000067
0005bf ff00      	SBRS R16,0
0005c0 c001      	RJMP _0x2000068
                 _0x2000067:
0005c1 c011      	RJMP _0x2000066
                 _0x2000068:
0005c2 e220      	LDI  R18,LOW(32)
0005c3 ff07      	SBRS R16,7
0005c4 c00a      	RJMP _0x2000069
0005c5 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
0005c6 6100      	ORI  R16,LOW(16)
0005c7 ff02      	SBRS R16,2
0005c8 c006      	RJMP _0x200006A
0005c9 7f0b      	ANDI R16,LOW(251)
0005ca 934a      	ST   -Y,R20
0005cb d3f4      	RCALL SUBOPT_0x49
0005cc 3050      	CPI  R21,0
0005cd f009      	BREQ _0x200006B
0005ce 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0005cf d3e1      	RCALL SUBOPT_0x46
0005d0 3050      	CPI  R21,0
0005d1 f009      	BREQ _0x200006C
0005d2 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0005d3 5031      	SUBI R19,LOW(1)
0005d4 85a8      	LDD  R26,Y+8
0005d5 85b9      	LDD  R27,Y+8+1
0005d6 9712      	SBIW R26,2
0005d7 f008      	BRLO _0x2000059
0005d8 cfba      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0005d9 ff00      	SBRS R16,0
0005da c007      	RJMP _0x200006D
                 _0x200006E:
0005db 3050      	CPI  R21,0
0005dc f029      	BREQ _0x2000070
0005dd 5051      	SUBI R21,LOW(1)
0005de e2e0      	LDI  R30,LOW(32)
0005df 93ea      	ST   -Y,R30
0005e0 d3df      	RCALL SUBOPT_0x49
0005e1 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
0005e2 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0005e3 cef8      	RJMP _0x2000016
                 _0x2000018:
0005e4 85ac      	LDD  R26,Y+12
0005e5 85bd      	LDD  R27,Y+12+1
0005e6 d49c      	RCALL __GETW1P
0005e7 d4cc      	RCALL __LOADLOCR6
0005e8 9664      	ADIW R28,20
0005e9 9508      	RET
                 _sprintf:
0005ea 92ff      	PUSH R15
0005eb 2ef8      	MOV  R15,R24
0005ec 9726      	SBIW R28,6
0005ed d4c1      	RCALL __SAVELOCR4
0005ee 01de      	MOVW R26,R28
0005ef 961c      	ADIW R26,12
0005f0 d482      	RCALL __ADDW2R15
0005f1 d3b0      	RCALL SUBOPT_0x42
0005f2 f411      	BRNE _0x2000072
0005f3 d3ba      	RCALL SUBOPT_0x45
0005f4 c01c      	RJMP _0x20C0007
                 _0x2000072:
0005f5 01de      	MOVW R26,R28
0005f6 9616      	ADIW R26,6
0005f7 d47b      	RCALL __ADDW2R15
0005f8 018d      	MOVW R16,R26
0005f9 01de      	MOVW R26,R28
0005fa 961c      	ADIW R26,12
0005fb d3dc      	RCALL SUBOPT_0x50
0005fc d3d2      	RCALL SUBOPT_0x4D
0005fd e0e0      	LDI  R30,LOW(0)
0005fe 87e8      	STD  Y+8,R30
0005ff 87e9      	STD  Y+8+1,R30
000600 01de      	MOVW R26,R28
000601 961a      	ADIW R26,10
000602 d3d5      	RCALL SUBOPT_0x50
000603 d279      	RCALL SUBOPT_0x0
000604 931a      	ST   -Y,R17
000605 930a      	ST   -Y,R16
000606 eaea      	LDI  R30,LOW(_put_buff_G100)
000607 e0f4      	LDI  R31,HIGH(_put_buff_G100)
000608 d274      	RCALL SUBOPT_0x0
000609 01fe      	MOVW R30,R28
00060a 963a      	ADIW R30,10
00060b d271      	RCALL SUBOPT_0x0
00060c dec6      	RCALL __print_G100
00060d 019f      	MOVW R18,R30
00060e d3c6      	RCALL SUBOPT_0x4F
00060f d3cb      	RCALL SUBOPT_0x51
000610 01f9      	MOVW R30,R18
                 _0x20C0007:
000611 d4a4      	RCALL __LOADLOCR4
000612 962a      	ADIW R28,10
000613 90ff      	POP  R15
000614 9508      	RET
                 _get_buff_G100:
000615 931a      	ST   -Y,R17
000616 d3c7      	RCALL SUBOPT_0x52
000617 d3c3      	RCALL SUBOPT_0x51
000618 81ab      	LDD  R26,Y+3
000619 81bc      	LDD  R27,Y+3+1
00061a 91ec      	LD   R30,X
00061b 2f1e      	MOV  R17,R30
00061c 30e0      	CPI  R30,0
00061d f011      	BREQ _0x200007A
00061e d3bc      	RCALL SUBOPT_0x51
00061f c011      	RJMP _0x200007B
                 _0x200007A:
000620 d3bd      	RCALL SUBOPT_0x52
000621 9611      	ADIW R26,1
000622 d37f      	RCALL SUBOPT_0x42
000623 f061      	BREQ _0x200007C
000624 81e9      	LDD  R30,Y+1
000625 81fa      	LDD  R31,Y+1+1
000626 81a1      	LDD  R26,Z+1
000627 81b2      	LDD  R27,Z+2
000628 91ec      	LD   R30,X
000629 2f1e      	MOV  R17,R30
00062a 30e0      	CPI  R30,0
00062b f019      	BREQ _0x200007D
00062c d3b1      	RCALL SUBOPT_0x52
00062d 9611      	ADIW R26,1
00062e d379      	RCALL SUBOPT_0x44
                 _0x200007D:
00062f c001      	RJMP _0x200007E
                 _0x200007C:
000630 e010      	LDI  R17,LOW(0)
                 _0x200007E:
                 _0x200007B:
000631 2fe1      	MOV  R30,R17
000632 8118      	LDD  R17,Y+0
                 _0x20C0006:
000633 9625      	ADIW R28,5
000634 9508      	RET
                 __scanf_G100:
000635 9725      	SBIW R28,5
000636 d476      	RCALL __SAVELOCR6
000637 e0e0      	LDI  R30,LOW(0)
000638 e0f0      	LDI  R31,HIGH(0)
000639 87e8      	STD  Y+8,R30
00063a 87f9      	STD  Y+8+1,R31
00063b 2f4e      	MOV  R20,R30
                 _0x200007F:
00063c 89e9      	LDD  R30,Y+17
00063d 89fa      	LDD  R31,Y+17+1
00063e 9631      	ADIW R30,1
00063f 8be9      	STD  Y+17,R30
000640 8bfa      	STD  Y+17+1,R31
000641 9731      	SBIW R30,1
000642 91e4      	LPM  R30,Z
000643 2f3e      	MOV  R19,R30
000644 30e0      	CPI  R30,0
000645 f409      	BRNE PC+2
000646 c0f1      	RJMP _0x2000081
000647 d399      	RCALL SUBOPT_0x53
000648 f099      	BREQ _0x2000082
                 _0x2000083:
000649 b7ed      	IN   R30,SPL
00064a b7fe      	IN   R31,SPH
00064b d231      	RCALL SUBOPT_0x0
00064c 934f      	PUSH R20
00064d d372      	RCALL SUBOPT_0x49
00064e 914f      	POP  R20
00064f 2f3e      	MOV  R19,R30
000650 30e0      	CPI  R30,0
000651 f011      	BREQ _0x2000086
000652 d38e      	RCALL SUBOPT_0x53
000653 f409      	BRNE _0x2000087
                 _0x2000086:
000654 c005      	RJMP _0x2000085
                 _0x2000087:
000655 d38f      	RCALL SUBOPT_0x54
000656 f414      	BRGE _0x2000088
000657 d356      	RCALL SUBOPT_0x45
000658 c0e1      	RJMP _0x20C0004
                 _0x2000088:
000659 cfef      	RJMP _0x2000083
                 _0x2000085:
00065a 2f43      	MOV  R20,R19
00065b c0db      	RJMP _0x2000089
                 _0x2000082:
00065c 3235      	CPI  R19,37
00065d f009      	BREQ PC+2
00065e c0c5      	RJMP _0x200008A
00065f e050      	LDI  R21,LOW(0)
                 _0x200008B:
000660 89e9      	LDD  R30,Y+17
000661 89fa      	LDD  R31,Y+17+1
000662 9135      	LPM  R19,Z+
000663 8be9      	STD  Y+17,R30
000664 8bfa      	STD  Y+17+1,R31
000665 3330      	CPI  R19,48
000666 f010      	BRLO _0x200008F
000667 333a      	CPI  R19,58
000668 f008      	BRLO _0x200008E
                 _0x200008F:
000669 c007      	RJMP _0x200008D
                 _0x200008E:
00066a e0aa      	LDI  R26,LOW(10)
00066b 9f5a      	MUL  R21,R26
00066c 2d50      	MOV  R21,R0
00066d 2fe3      	MOV  R30,R19
00066e 53e0      	SUBI R30,LOW(48)
00066f 0f5e      	ADD  R21,R30
000670 cfef      	RJMP _0x200008B
                 _0x200008D:
000671 3030      	CPI  R19,0
000672 f409      	BRNE _0x2000091
000673 c0c4      	RJMP _0x2000081
                 _0x2000091:
                 _0x2000092:
000674 b7ed      	IN   R30,SPL
000675 b7fe      	IN   R31,SPH
000676 d206      	RCALL SUBOPT_0x0
000677 934f      	PUSH R20
000678 d347      	RCALL SUBOPT_0x49
000679 914f      	POP  R20
00067a 2f2e      	MOV  R18,R30
00067b 93ea      	ST   -Y,R30
00067c d1c7      	RCALL _isspace
00067d 30e0      	CPI  R30,0
00067e f029      	BREQ _0x2000094
00067f d365      	RCALL SUBOPT_0x54
000680 f414      	BRGE _0x2000095
000681 d32c      	RCALL SUBOPT_0x45
000682 c0b7      	RJMP _0x20C0004
                 _0x2000095:
000683 cff0      	RJMP _0x2000092
                 _0x2000094:
000684 3020      	CPI  R18,0
000685 f409      	BRNE _0x2000096
000686 c0a9      	RJMP _0x2000097
                 _0x2000096:
000687 2f42      	MOV  R20,R18
000688 3050      	CPI  R21,0
000689 f409      	BRNE _0x2000098
00068a ef5f      	LDI  R21,LOW(255)
                 _0x2000098:
00068b 2fe3      	MOV  R30,R19
00068c 36e3      	CPI  R30,LOW(0x63)
00068d f471      	BRNE _0x200009C
00068e d35b      	RCALL SUBOPT_0x55
00068f b7ed      	IN   R30,SPL
000690 b7fe      	IN   R31,SPH
000691 d1eb      	RCALL SUBOPT_0x0
000692 934f      	PUSH R20
000693 d32c      	RCALL SUBOPT_0x49
000694 914f      	POP  R20
000695 01d8      	MOVW R26,R16
000696 93ec      	ST   X,R30
000697 d34d      	RCALL SUBOPT_0x54
000698 f414      	BRGE _0x200009D
000699 d314      	RCALL SUBOPT_0x45
00069a c09f      	RJMP _0x20C0004
                 _0x200009D:
00069b c082      	RJMP _0x200009B
                 _0x200009C:
00069c 37e3      	CPI  R30,LOW(0x73)
00069d f501      	BRNE _0x20000A6
00069e d34b      	RCALL SUBOPT_0x55
                 _0x200009F:
00069f 2fe5      	MOV  R30,R21
0006a0 5051      	SUBI R21,1
0006a1 30e0      	CPI  R30,0
0006a2 f0c1      	BREQ _0x20000A1
0006a3 b7ed      	IN   R30,SPL
0006a4 b7fe      	IN   R31,SPH
0006a5 d1d7      	RCALL SUBOPT_0x0
0006a6 934f      	PUSH R20
0006a7 d318      	RCALL SUBOPT_0x49
0006a8 914f      	POP  R20
0006a9 2f3e      	MOV  R19,R30
0006aa 30e0      	CPI  R30,0
0006ab f011      	BREQ _0x20000A3
0006ac d334      	RCALL SUBOPT_0x53
0006ad f029      	BREQ _0x20000A2
                 _0x20000A3:
0006ae d336      	RCALL SUBOPT_0x54
0006af f414      	BRGE _0x20000A5
0006b0 d2fd      	RCALL SUBOPT_0x45
0006b1 c088      	RJMP _0x20C0004
                 _0x20000A5:
0006b2 c008      	RJMP _0x20000A1
                 _0x20000A2:
0006b3 931f      	PUSH R17
0006b4 930f      	PUSH R16
0006b5 d1d2      	RCALL SUBOPT_0x3
0006b6 2fe3      	MOV  R30,R19
0006b7 91af      	POP  R26
0006b8 91bf      	POP  R27
0006b9 93ec      	ST   X,R30
0006ba cfe4      	RJMP _0x200009F
                 _0x20000A1:
0006bb 01d8      	MOVW R26,R16
0006bc d31e      	RCALL SUBOPT_0x51
0006bd c060      	RJMP _0x200009B
                 _0x20000A6:
0006be e0e1      	LDI  R30,LOW(1)
0006bf 87ea      	STD  Y+10,R30
0006c0 2fe3      	MOV  R30,R19
0006c1 36e4      	CPI  R30,LOW(0x64)
0006c2 f011      	BREQ _0x20000AB
0006c3 36e9      	CPI  R30,LOW(0x69)
0006c4 f419      	BRNE _0x20000AC
                 _0x20000AB:
0006c5 e0e0      	LDI  R30,LOW(0)
0006c6 87ea      	STD  Y+10,R30
0006c7 c002      	RJMP _0x20000AD
                 _0x20000AC:
0006c8 37e5      	CPI  R30,LOW(0x75)
0006c9 f411      	BRNE _0x20000AE
                 _0x20000AD:
0006ca e02a      	LDI  R18,LOW(10)
0006cb c008      	RJMP _0x20000A9
                 _0x20000AE:
0006cc 37e8      	CPI  R30,LOW(0x78)
0006cd f411      	BRNE _0x20000AF
0006ce e120      	LDI  R18,LOW(16)
0006cf c004      	RJMP _0x20000A9
                 _0x20000AF:
0006d0 32e5      	CPI  R30,LOW(0x25)
0006d1 f409      	BRNE _0x20000B2
0006d2 c051      	RJMP _0x20000B1
                 _0x20000B2:
0006d3 c064      	RJMP _0x20C0005
                 _0x20000A9:
0006d4 e0e0      	LDI  R30,LOW(0)
0006d5 83ee      	STD  Y+6,R30
0006d6 83ef      	STD  Y+6+1,R30
                 _0x20000B3:
0006d7 2fe5      	MOV  R30,R21
0006d8 5051      	SUBI R21,1
0006d9 30e0      	CPI  R30,0
0006da f1c9      	BREQ _0x20000B5
0006db b7ed      	IN   R30,SPL
0006dc b7fe      	IN   R31,SPH
0006dd d19f      	RCALL SUBOPT_0x0
0006de 934f      	PUSH R20
0006df d2e0      	RCALL SUBOPT_0x49
0006e0 914f      	POP  R20
0006e1 2f3e      	MOV  R19,R30
0006e2 32e1      	CPI  R30,LOW(0x21)
0006e3 f428      	BRSH _0x20000B6
0006e4 d300      	RCALL SUBOPT_0x54
0006e5 f414      	BRGE _0x20000B7
0006e6 d2c7      	RCALL SUBOPT_0x45
0006e7 c052      	RJMP _0x20C0004
                 _0x20000B7:
0006e8 c015      	RJMP _0x20000B8
                 _0x20000B6:
0006e9 85ea      	LDD  R30,Y+10
0006ea 30e0      	CPI  R30,0
0006eb f439      	BRNE _0x20000B9
0006ec 323d      	CPI  R19,45
0006ed f419      	BRNE _0x20000BA
0006ee efef      	LDI  R30,LOW(255)
0006ef 87ea      	STD  Y+10,R30
0006f0 cfe6      	RJMP _0x20000B3
                 _0x20000BA:
0006f1 e0e1      	LDI  R30,LOW(1)
0006f2 87ea      	STD  Y+10,R30
                 _0x20000B9:
0006f3 3120      	CPI  R18,16
0006f4 f429      	BRNE _0x20000BC
0006f5 933a      	ST   -Y,R19
0006f6 d157      	RCALL _isxdigit
0006f7 30e0      	CPI  R30,0
0006f8 f029      	BREQ _0x20000B8
0006f9 c006      	RJMP _0x20000BE
                 _0x20000BC:
0006fa 933a      	ST   -Y,R19
0006fb d140      	RCALL _isdigit
0006fc 30e0      	CPI  R30,0
0006fd f411      	BRNE _0x20000BF
                 _0x20000B8:
0006fe 2f43      	MOV  R20,R19
0006ff c014      	RJMP _0x20000B5
                 _0x20000BF:
                 _0x20000BE:
000700 3631      	CPI  R19,97
000701 f010      	BRLO _0x20000C0
000702 5537      	SUBI R19,LOW(87)
000703 c005      	RJMP _0x20000C1
                 _0x20000C0:
000704 3431      	CPI  R19,65
000705 f010      	BRLO _0x20000C2
000706 5337      	SUBI R19,LOW(55)
000707 c001      	RJMP _0x20000C3
                 _0x20000C2:
000708 5330      	SUBI R19,LOW(48)
                 _0x20000C3:
                 _0x20000C1:
000709 2fe2      	MOV  R30,R18
00070a d2ca      	RCALL SUBOPT_0x4F
00070b d2e9      	RCALL SUBOPT_0x56
00070c d36e      	RCALL __MULW12U
00070d 01df      	MOVW R26,R30
00070e 2fe3      	MOV  R30,R19
00070f d2e5      	RCALL SUBOPT_0x56
000710 0fea      	ADD  R30,R26
000711 1ffb      	ADC  R31,R27
000712 d2bc      	RCALL SUBOPT_0x4D
000713 cfc3      	RJMP _0x20000B3
                 _0x20000B5:
000714 d2d5      	RCALL SUBOPT_0x55
000715 85ea      	LDD  R30,Y+10
000716 d2be      	RCALL SUBOPT_0x4F
000717 e0f0      	LDI  R31,0
000718 fde7      	SBRC R30,7
000719 efff      	SER  R31
00071a d360      	RCALL __MULW12U
00071b 01d8      	MOVW R26,R16
00071c 93ed      	ST   X+,R30
00071d 93fc      	ST   X,R31
                 _0x200009B:
00071e 85e8      	LDD  R30,Y+8
00071f 85f9      	LDD  R31,Y+8+1
000720 9631      	ADIW R30,1
000721 87e8      	STD  Y+8,R30
000722 87f9      	STD  Y+8+1,R31
000723 c013      	RJMP _0x20000C4
                 _0x200008A:
                 _0x20000B1:
000724 b7ed      	IN   R30,SPL
000725 b7fe      	IN   R31,SPH
000726 d156      	RCALL SUBOPT_0x0
000727 934f      	PUSH R20
000728 d297      	RCALL SUBOPT_0x49
000729 914f      	POP  R20
00072a 17e3      	CP   R30,R19
00072b f059      	BREQ _0x20000C5
00072c d2b8      	RCALL SUBOPT_0x54
00072d f414      	BRGE _0x20000C6
00072e d27f      	RCALL SUBOPT_0x45
00072f c00a      	RJMP _0x20C0004
                 _0x20000C6:
                 _0x2000097:
000730 85e8      	LDD  R30,Y+8
000731 85f9      	LDD  R31,Y+8+1
000732 9730      	SBIW R30,0
000733 f411      	BRNE _0x20000C7
000734 d279      	RCALL SUBOPT_0x45
000735 c004      	RJMP _0x20C0004
                 _0x20000C7:
000736 c001      	RJMP _0x2000081
                 _0x20000C5:
                 _0x20000C4:
                 _0x2000089:
000737 cf04      	RJMP _0x200007F
                 _0x2000081:
                 _0x20C0005:
000738 85e8      	LDD  R30,Y+8
000739 85f9      	LDD  R31,Y+8+1
                 _0x20C0004:
00073a d379      	RCALL __LOADLOCR6
00073b 9663      	ADIW R28,19
00073c 9508      	RET
                 _sscanf:
00073d 92ff      	PUSH R15
00073e 2ef8      	MOV  R15,R24
00073f 9723      	SBIW R28,3
000740 d370      	RCALL __SAVELOCR2
000741 01de      	MOVW R26,R28
000742 9617      	ADIW R26,7
000743 d32f      	RCALL __ADDW2R15
000744 d25d      	RCALL SUBOPT_0x42
000745 f411      	BRNE _0x20000C8
000746 d267      	RCALL SUBOPT_0x45
000747 c016      	RJMP _0x20C0003
                 _0x20000C8:
000748 01de      	MOVW R26,R28
000749 9611      	ADIW R26,1
00074a d328      	RCALL __ADDW2R15
00074b 018d      	MOVW R16,R26
00074c 01de      	MOVW R26,R28
00074d 9617      	ADIW R26,7
00074e d289      	RCALL SUBOPT_0x50
00074f 83eb      	STD  Y+3,R30
000750 83fc      	STD  Y+3+1,R31
000751 01de      	MOVW R26,R28
000752 9615      	ADIW R26,5
000753 d284      	RCALL SUBOPT_0x50
000754 d128      	RCALL SUBOPT_0x0
000755 931a      	ST   -Y,R17
000756 930a      	ST   -Y,R16
000757 e1e5      	LDI  R30,LOW(_get_buff_G100)
000758 e0f6      	LDI  R31,HIGH(_get_buff_G100)
000759 d123      	RCALL SUBOPT_0x0
00075a 01fe      	MOVW R30,R28
00075b 9638      	ADIW R30,8
00075c d120      	RCALL SUBOPT_0x0
00075d ded7      	RCALL __scanf_G100
                 _0x20C0003:
00075e d359      	RCALL __LOADLOCR2
00075f 9625      	ADIW R28,5
000760 90ff      	POP  R15
000761 9508      	RET
                 
                 	.CSEG
                 _rtc_init:
000762 81ea      	LDD  R30,Y+2
000763 70e3      	ANDI R30,LOW(0x3)
000764 83ea      	STD  Y+2,R30
000765 81e9      	LDD  R30,Y+1
000766 30e0      	CPI  R30,0
000767 f019      	BREQ _0x2020003
000768 81ea      	LDD  R30,Y+2
000769 61e0      	ORI  R30,0x10
00076a 83ea      	STD  Y+2,R30
                 _0x2020003:
00076b 81e8      	LD   R30,Y
00076c 30e0      	CPI  R30,0
00076d f019      	BREQ _0x2020004
00076e 81ea      	LDD  R30,Y+2
00076f 68e0      	ORI  R30,0x80
000770 83ea      	STD  Y+2,R30
                 _0x2020004:
000771 d285      	RCALL SUBOPT_0x57
000772 e0e7      	LDI  R30,LOW(7)
000773 d287      	RCALL SUBOPT_0x58
000774 d116      	RCALL SUBOPT_0x4
000775 d2d8      	RCALL _i2c_write
000776 d2b2      	RCALL _i2c_stop
000777 c099      	RJMP _0x20C0002
                 _rtc_get_time:
000778 d27e      	RCALL SUBOPT_0x57
000779 d1c9      	RCALL SUBOPT_0x2E
00077a d2d3      	RCALL _i2c_write
00077b d281      	RCALL SUBOPT_0x59
00077c d284      	RCALL SUBOPT_0x5A
00077d 81a8      	LD   R26,Y
00077e 81b9      	LDD  R27,Y+1
00077f 93ec      	ST   X,R30
000780 d280      	RCALL SUBOPT_0x5A
000781 d21d      	RCALL SUBOPT_0x41
000782 93ec      	ST   X,R30
000783 d1bf      	RCALL SUBOPT_0x2E
000784 d2ae      	RCALL _i2c_read
000785 93ea      	ST   -Y,R30
000786 d0ea      	RCALL _bcd2bin
000787 81ac      	LDD  R26,Y+4
000788 81bd      	LDD  R27,Y+4+1
000789 93ec      	ST   X,R30
00078a d29e      	RCALL _i2c_stop
00078b 9626      	ADIW R28,6
00078c 9508      	RET
                 _rtc_get_date:
00078d d269      	RCALL SUBOPT_0x57
00078e e0e3      	LDI  R30,LOW(3)
00078f d26b      	RCALL SUBOPT_0x58
000790 d26c      	RCALL SUBOPT_0x59
000791 e0e1      	LDI  R30,LOW(1)
000792 93ea      	ST   -Y,R30
000793 d29f      	RCALL _i2c_read
000794 d240      	RCALL SUBOPT_0x4F
000795 93ec      	ST   X,R30
000796 d26a      	RCALL SUBOPT_0x5A
000797 81ac      	LDD  R26,Y+4
000798 81bd      	LDD  R27,Y+4+1
000799 93ec      	ST   X,R30
00079a d266      	RCALL SUBOPT_0x5A
00079b d203      	RCALL SUBOPT_0x41
00079c 93ec      	ST   X,R30
00079d d1a5      	RCALL SUBOPT_0x2E
00079e d294      	RCALL _i2c_read
00079f 93ea      	ST   -Y,R30
0007a0 d0d0      	RCALL _bcd2bin
0007a1 81a8      	LD   R26,Y
0007a2 81b9      	LDD  R27,Y+1
0007a3 93ec      	ST   X,R30
0007a4 d284      	RCALL _i2c_stop
0007a5 9628      	ADIW R28,8
0007a6 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
0007a7 81e8      	LD   R30,Y
0007a8 71e0      	ANDI R30,LOW(0x10)
0007a9 f011      	BREQ _0x2040004
0007aa 9adc      	SBI  0x1B,4
0007ab c001      	RJMP _0x2040005
                 _0x2040004:
0007ac 98dc      	CBI  0x1B,4
                 _0x2040005:
0007ad 81e8      	LD   R30,Y
0007ae 72e0      	ANDI R30,LOW(0x20)
0007af f011      	BREQ _0x2040006
0007b0 9add      	SBI  0x1B,5
0007b1 c001      	RJMP _0x2040007
                 _0x2040006:
0007b2 98dd      	CBI  0x1B,5
                 _0x2040007:
0007b3 81e8      	LD   R30,Y
0007b4 74e0      	ANDI R30,LOW(0x40)
0007b5 f011      	BREQ _0x2040008
0007b6 9ade      	SBI  0x1B,6
0007b7 c001      	RJMP _0x2040009
                 _0x2040008:
0007b8 98de      	CBI  0x1B,6
                 _0x2040009:
0007b9 81e8      	LD   R30,Y
0007ba 78e0      	ANDI R30,LOW(0x80)
0007bb f011      	BREQ _0x204000A
0007bc 9adf      	SBI  0x1B,7
0007bd c001      	RJMP _0x204000B
                 _0x204000A:
0007be 98df      	CBI  0x1B,7
                 _0x204000B:
                +
0007bf e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
0007c0 958a     +DEC R24
0007c1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
0007c2 9ada      	SBI  0x1B,2
                +
0007c3 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0007c4 958a     +DEC R24
0007c5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0007c6 98da      	CBI  0x1B,2
                +
0007c7 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0007c8 958a     +DEC R24
0007c9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0007ca c06f      	RJMP _0x20C0001
                 __lcd_write_data:
0007cb 81e8      	LD   R30,Y
0007cc d239      	RCALL SUBOPT_0x5B
0007cd 81e8          ld    r30,y
0007ce 95e2          swap  r30
0007cf 83e8          st    y,r30
0007d0 81e8      	LD   R30,Y
0007d1 d234      	RCALL SUBOPT_0x5B
                +
0007d2 ec88     +LDI R24 , LOW ( 200 )
0007d3 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0007d4 9701     +SBIW R24 , 1
0007d5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0007d6 c063      	RJMP _0x20C0001
                 _lcd_gotoxy:
0007d7 81e8      	LD   R30,Y
0007d8 d21c      	RCALL SUBOPT_0x56
0007d9 5de0      	SUBI R30,LOW(-__base_y_G102)
0007da 4ffd      	SBCI R31,HIGH(-__base_y_G102)
0007db 81e0      	LD   R30,Z
0007dc 81a9      	LDD  R26,Y+1
0007dd 0fea      	ADD  R30,R26
0007de d229      	RCALL SUBOPT_0x5C
0007df 80a9      	LDD  R10,Y+1
0007e0 80d8      	LDD  R13,Y+0
0007e1 9622      	ADIW R28,2
0007e2 9508      	RET
                 _lcd_clear:
0007e3 e0e2      	LDI  R30,LOW(2)
0007e4 d223      	RCALL SUBOPT_0x5C
0007e5 e0e3      	LDI  R30,LOW(3)
0007e6 e0f0      	LDI  R31,HIGH(3)
0007e7 d0c5      	RCALL SUBOPT_0xD
0007e8 e0ec      	LDI  R30,LOW(12)
0007e9 d21e      	RCALL SUBOPT_0x5C
0007ea e0e1      	LDI  R30,LOW(1)
0007eb d21c      	RCALL SUBOPT_0x5C
0007ec e0e3      	LDI  R30,LOW(3)
0007ed e0f0      	LDI  R31,HIGH(3)
0007ee d0be      	RCALL SUBOPT_0xD
0007ef e0e0      	LDI  R30,LOW(0)
0007f0 2ede      	MOV  R13,R30
0007f1 2eae      	MOV  R10,R30
0007f2 9508      	RET
                 _lcd_putchar:
0007f3 81a8      	LD   R26,Y
0007f4 30aa      	CPI  R26,LOW(0xA)
0007f5 f011      	BREQ _0x2040011
0007f6 14ac      	CP   R10,R12
0007f7 f038      	BRLO _0x2040010
                 _0x2040011:
0007f8 d14a      	RCALL SUBOPT_0x2E
0007f9 94d3      	INC  R13
0007fa 92da      	ST   -Y,R13
0007fb dfdb      	RCALL _lcd_gotoxy
0007fc 81a8      	LD   R26,Y
0007fd 30aa      	CPI  R26,LOW(0xA)
0007fe f1d9      	BREQ _0x20C0001
                 _0x2040010:
0007ff 94a3      	INC  R10
000800 9ad8      	SBI  0x1B,0
000801 81e8      	LD   R30,Y
000802 d205      	RCALL SUBOPT_0x5C
000803 98d8      	CBI  0x1B,0
000804 c035      	RJMP _0x20C0001
                 _lcd_puts:
000805 931a      	ST   -Y,R17
                 _0x2040014:
000806 d1d7      	RCALL SUBOPT_0x52
000807 91ed      	LD   R30,X+
000808 83a9      	STD  Y+1,R26
000809 83ba      	STD  Y+1+1,R27
00080a 2f1e      	MOV  R17,R30
00080b 30e0      	CPI  R30,0
00080c f019      	BREQ _0x2040016
00080d 931a      	ST   -Y,R17
00080e dfe4      	RCALL _lcd_putchar
00080f cff6      	RJMP _0x2040014
                 _0x2040016:
000810 8118      	LDD  R17,Y+0
                 _0x20C0002:
000811 9623      	ADIW R28,3
000812 9508      	RET
                 _lcd_init:
000813 9ad4      	SBI  0x1A,4
000814 9ad5      	SBI  0x1A,5
000815 9ad6      	SBI  0x1A,6
000816 9ad7      	SBI  0x1A,7
000817 9ad2      	SBI  0x1A,2
000818 9ad0      	SBI  0x1A,0
000819 9ad1      	SBI  0x1A,1
00081a 98da      	CBI  0x1B,2
00081b 98d8      	CBI  0x1B,0
00081c 98d9      	CBI  0x1B,1
00081d 80c8      	LDD  R12,Y+0
00081e 81e8      	LD   R30,Y
00081f 58e0      	SUBI R30,-LOW(128)
                +
000820 93e0 0232+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000822 81e8      	LD   R30,Y
000823 54e0      	SUBI R30,-LOW(192)
                +
000824 93e0 0233+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
000826 e1e4      	LDI  R30,LOW(20)
000827 e0f0      	LDI  R31,HIGH(20)
000828 d084      	RCALL SUBOPT_0xD
000829 e3e0      	LDI  R30,LOW(48)
00082a d1db      	RCALL SUBOPT_0x5B
00082b d1de      	RCALL SUBOPT_0x5D
00082c d1dd      	RCALL SUBOPT_0x5D
00082d d1e2      	RCALL SUBOPT_0x5E
00082e e2e0      	LDI  R30,LOW(32)
00082f d1d6      	RCALL SUBOPT_0x5B
000830 d1df      	RCALL SUBOPT_0x5E
000831 e2e8      	LDI  R30,LOW(40)
000832 d1d5      	RCALL SUBOPT_0x5C
000833 e0e4      	LDI  R30,LOW(4)
000834 d1d3      	RCALL SUBOPT_0x5C
000835 e8e5      	LDI  R30,LOW(133)
000836 d1d1      	RCALL SUBOPT_0x5C
000837 e0e6      	LDI  R30,LOW(6)
000838 d1cf      	RCALL SUBOPT_0x5C
000839 dfa9      	RCALL _lcd_clear
                 _0x20C0001:
00083a 9621      	ADIW R28,1
00083b 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00083c e0e1          ldi  r30,1
00083d 91f9          ld   r31,y+
00083e 33f0          cpi  r31,'0'
00083f f010          brlo isdigit0
000840 33fa          cpi  r31,'9'+1
000841 f008          brlo isdigit1
                 isdigit0:
000842 27ee          clr  r30
                 isdigit1:
000843 9508          ret
                 _isspace:
000844 e0e1          ldi  r30,1
000845 91f9          ld   r31,y+
000846 32f0          cpi  r31,' '
000847 f029          breq isspace1
000848 30f9          cpi  r31,9
000849 f010          brlo isspace0
00084a 30fe          cpi  r31,13+1
00084b f008          brlo isspace1
                 isspace0:
00084c 27ee          clr  r30
                 isspace1:
00084d 9508          ret
                 _isxdigit:
00084e e0e1          ldi  r30,1
00084f 91f9          ld   r31,y+
000850 53f0          subi r31,0x30
000851 f040          brcs isxdigit0
000852 30fa          cpi  r31,10
000853 f038          brcs isxdigit1
000854 75ff          andi r31,0x5f
000855 50f7          subi r31,7
000856 30fa          cpi  r31,10
000857 f010          brcs isxdigit0
000858 31f0          cpi  r31,16
000859 f008          brcs isxdigit1
                 isxdigit0:
00085a 27ee          clr  r30
                 isxdigit1:
00085b 9508          ret
                 
                 	.CSEG
                 _strlen:
00085c 91a9          ld   r26,y+
00085d 91b9          ld   r27,y+
00085e 27ee          clr  r30
00085f 27ff          clr  r31
                 strlen0:
000860 916d          ld   r22,x+
000861 2366          tst  r22
000862 f011          breq strlen1
000863 9631          adiw r30,1
000864 cffb          rjmp strlen0
                 strlen1:
000865 9508          ret
                 _strlenf:
000866 27aa          clr  r26
000867 27bb          clr  r27
000868 91e9          ld   r30,y+
000869 91f9          ld   r31,y+
                 strlenf0:
00086a 9005      	lpm  r0,z+
00086b 2000          tst  r0
00086c f011          breq strlenf1
00086d 9611          adiw r26,1
00086e cffb          rjmp strlenf0
                 strlenf1:
00086f 01fd          movw r30,r26
000870 9508          ret
                 
                 	.CSEG
                 _bcd2bin:
000871 81e8          ld   r30,y
000872 95e2          swap r30
000873 70ef          andi r30,0xf
000874 2fae          mov  r26,r30
000875 0faa          lsl  r26
000876 0faa          lsl  r26
000877 0fea          add  r30,r26
000878 0fee          lsl  r30
000879 91a9          ld   r26,y+
00087a 70af          andi r26,0xf
00087b 0fea          add  r30,r26
00087c 9508          ret
                 
                 	.DSEG
                 _jamTimerOn:
0001f0           	.BYTE 0x4
                 _menitTimerOn:
0001f4           	.BYTE 0x4
                 _jamTimerOff:
0001f8           	.BYTE 0x4
                 _menitTimerOff:
0001fc           	.BYTE 0x4
                 
                 	.ESEG
                 __jamTimerOn:
000000           	.BYTE 0x4
                 __menitTimerOn:
000004           	.BYTE 0x4
                 __jamTimerOff:
000008           	.BYTE 0x4
                 __menitTimerOff:
00000c           	.BYTE 0x4
                 
                 	.DSEG
                 _dataKeypad:
000200           	.BYTE 0x10
                 _bufferLcd1:
000210           	.BYTE 0x10
                 _bufferLcd2:
000220           	.BYTE 0x10
                 __base_y_G102:
000230           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 142 TIMES, CODE SIZE REDUCTION:139 WORDS
                 SUBOPT_0x0:
00087d 93fa      	ST   -Y,R31
00087e 93ea      	ST   -Y,R30
00087f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
                +
000880 e000     +LDI R16 , LOW ( 0 )
000881 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000882 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:46 WORDS
                 SUBOPT_0x2:
000883 0fa0      	ADD  R26,R16
000884 1fb1      	ADC  R27,R17
000885 e0e0      	LDI  R30,LOW(0)
000886 93ec      	ST   X,R30
000887 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
                +
000888 5f0f     +SUBI R16 , LOW ( - 1 )
000889 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00088a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x4:
00088b 81ea      	LDD  R30,Y+2
00088c 93ea      	ST   -Y,R30
00088d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x5:
00088e bbe2      	OUT  0x12,R30
00088f e1ee      	LDI  R30,LOW(30)
000890 e0f0      	LDI  R31,HIGH(30)
000891 dfeb      	RCALL SUBOPT_0x0
000892 c1d4      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x6:
000893 9468      	SET
000894 f8f0      	BLD  R15,0
000895 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 32 TIMES, CODE SIZE REDUCTION:153 WORDS
                 SUBOPT_0x7:
000896 2fe1      	MOV  R30,R17
000897 e0f0      	LDI  R31,0
000898 50e0      	SUBI R30,LOW(-_dataKeypad)
000899 4ffe      	SBCI R31,HIGH(-_dataKeypad)
00089a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x8:
00089b 83a0      	STD  Z+0,R26
00089c 81eb      	LDD  R30,Y+3
00089d 81fc      	LDD  R31,Y+3+1
00089e 9730      	SBIW R30,0
00089f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x9:
0008a0 81ea      	LDD  R30,Y+2
0008a1 0fe1      	ADD  R30,R17
0008a2 93ea      	ST   -Y,R30
0008a3 cfe7      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA:
0008a4 df32      	RCALL _lcd_gotoxy
0008a5 cff0      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0xB:
0008a6 81e0      	LD   R30,Z
0008a7 93ea      	ST   -Y,R30
0008a8 cf4a      	RJMP _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:40 WORDS
                 SUBOPT_0xC:
0008a9 ece8      	LDI  R30,LOW(200)
0008aa e0f0      	LDI  R31,HIGH(200)
0008ab dfd1      	RCALL SUBOPT_0x0
0008ac c1ba      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xD:
0008ad dfcf      	RCALL SUBOPT_0x0
0008ae c1b8      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xE:
0008af 972c      	SBIW R28,12
0008b0 d200      	RCALL __SAVELOCR2
0008b1 24ff      	CLR  R15
0008b2 df30      	RCALL _lcd_clear
0008b3 e0e0      	LDI  R30,LOW(0)
0008b4 93ea      	ST   -Y,R30
0008b5 93ea      	ST   -Y,R30
0008b6 cf20      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xF:
0008b7 dfc5      	RCALL SUBOPT_0x0
0008b8 cf4c      	RJMP _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10:
0008b9 eee8      	LDI  R30,LOW(1000)
0008ba e0f3      	LDI  R31,HIGH(1000)
0008bb cff1      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x11:
                +
0008bc 3003     +CPI R16 , LOW ( 3 )
0008bd e0e0     +LDI R30 , HIGH ( 3 )
0008be 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
0008bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x12:
0008c0 01de      	MOVW R26,R28
0008c1 961b      	ADIW R26,11
0008c2 cfc0      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x13:
0008c3 01de      	MOVW R26,R28
0008c4 9618      	ADIW R26,8
0008c5 cfbd      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x14:
0008c6 01de      	MOVW R26,R28
0008c7 9615      	ADIW R26,5
0008c8 cfba      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
0008c9 01de      	MOVW R26,R28
0008ca 9612      	ADIW R26,2
0008cb cfb7      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x16:
0008cc df16      	RCALL _lcd_clear
0008cd e0e0      	LDI  R30,LOW(0)
0008ce 93ea      	ST   -Y,R30
0008cf 93ea      	ST   -Y,R30
0008d0 cf06      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x17:
0008d1 e2e3      	LDI  R30,LOW(35)
0008d2 93ea      	ST   -Y,R30
0008d3 e0e1      	LDI  R30,LOW(1)
0008d4 e0f0      	LDI  R31,HIGH(1)
0008d5 dfa7      	RCALL SUBOPT_0x0
0008d6 e0e0      	LDI  R30,LOW(0)
0008d7 93ea      	ST   -Y,R30
0008d8 e0e1      	LDI  R30,LOW(1)
0008d9 93ea      	ST   -Y,R30
0008da d865      	RCALL _scanKeypad
0008db 91e0 0200 	LDS  R30,_dataKeypad
0008dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x18:
0008de 87eb      	STD  Y+11,R30
                +
0008df 91e0 0201+LDS R30 , _dataKeypad + ( 1 )
                 	__GETB1MN _dataKeypad,1
0008e1 87ec      	STD  Y+12,R30
                +
0008e2 91e0 0203+LDS R30 , _dataKeypad + ( 3 )
                 	__GETB1MN _dataKeypad,3
0008e4 87e8      	STD  Y+8,R30
                +
0008e5 91e0 0204+LDS R30 , _dataKeypad + ( 4 )
                 	__GETB1MN _dataKeypad,4
0008e7 87e9      	STD  Y+9,R30
0008e8 01fe      	MOVW R30,R28
0008e9 963b      	ADIW R30,11
0008ea df92      	RCALL SUBOPT_0x0
                +
0008eb e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
0008ec e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
0008ed cf8f      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x19:
0008ee 2766      	CLR  R22
0008ef 2777      	CLR  R23
0008f0 d19a      	RCALL __PUTPARD1
0008f1 e084      	LDI  R24,4
0008f2 de4a      	RCALL _sscanf
0008f3 9628      	ADIW R28,8
0008f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1A:
0008f5 01fe      	MOVW R30,R28
0008f6 9638      	ADIW R30,8
0008f7 df85      	RCALL SUBOPT_0x0
                +
0008f8 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
0008f9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
0008fa cf82      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
0008fb e0a0      	LDI  R26,LOW(__jamTimerOn)
0008fc e0b0      	LDI  R27,HIGH(__jamTimerOn)
0008fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
0008fe e0a4      	LDI  R26,LOW(__menitTimerOn)
0008ff e0b0      	LDI  R27,HIGH(__menitTimerOn)
000900 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
000901 d19a      	RCALL __EEPROMWRB
000902 cfc9      	RJMP SUBOPT_0x16
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x1E:
000903 83ed      	STD  Y+5,R30
                +
000904 91e0 0201+LDS R30 , _dataKeypad + ( 1 )
                 	__GETB1MN _dataKeypad,1
000906 83ee      	STD  Y+6,R30
                +
000907 91e0 0203+LDS R30 , _dataKeypad + ( 3 )
                 	__GETB1MN _dataKeypad,3
000909 83ea      	STD  Y+2,R30
                +
00090a 91e0 0204+LDS R30 , _dataKeypad + ( 4 )
                 	__GETB1MN _dataKeypad,4
00090c 83eb      	STD  Y+3,R30
00090d 01fe      	MOVW R30,R28
00090e 9635      	ADIW R30,5
00090f df6d      	RCALL SUBOPT_0x0
                +
000910 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
000911 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
000912 cf6a      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1F:
000913 01fe      	MOVW R30,R28
000914 9632      	ADIW R30,2
000915 df67      	RCALL SUBOPT_0x0
                +
000916 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
000917 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
000918 cf64      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000919 e0a8      	LDI  R26,LOW(__jamTimerOff)
00091a e0b0      	LDI  R27,HIGH(__jamTimerOff)
00091b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
00091c e0ac      	LDI  R26,LOW(__menitTimerOff)
00091d e0b0      	LDI  R27,HIGH(__menitTimerOff)
00091e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
                +
00091f e0a1     +LDI R26 , LOW ( __jamTimerOn + ( 1 ) )
000920 e0b0     +LDI R27 , HIGH ( __jamTimerOn + ( 1 ) )
                 	__POINTW2MN __jamTimerOn,1
000921 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
                +
000922 e0a5     +LDI R26 , LOW ( __menitTimerOn + ( 1 ) )
000923 e0b0     +LDI R27 , HIGH ( __menitTimerOn + ( 1 ) )
                 	__POINTW2MN __menitTimerOn,1
000924 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
000925 e0a9     +LDI R26 , LOW ( __jamTimerOff + ( 1 ) )
000926 e0b0     +LDI R27 , HIGH ( __jamTimerOff + ( 1 ) )
                 	__POINTW2MN __jamTimerOff,1
000927 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
000928 e0ad     +LDI R26 , LOW ( __menitTimerOff + ( 1 ) )
000929 e0b0     +LDI R27 , HIGH ( __menitTimerOff + ( 1 ) )
                 	__POINTW2MN __menitTimerOff,1
00092a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
                +
00092b e0a2     +LDI R26 , LOW ( __jamTimerOn + ( 2 ) )
00092c e0b0     +LDI R27 , HIGH ( __jamTimerOn + ( 2 ) )
                 	__POINTW2MN __jamTimerOn,2
00092d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
                +
00092e e0a6     +LDI R26 , LOW ( __menitTimerOn + ( 2 ) )
00092f e0b0     +LDI R27 , HIGH ( __menitTimerOn + ( 2 ) )
                 	__POINTW2MN __menitTimerOn,2
000930 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
                +
000931 e0aa     +LDI R26 , LOW ( __jamTimerOff + ( 2 ) )
000932 e0b0     +LDI R27 , HIGH ( __jamTimerOff + ( 2 ) )
                 	__POINTW2MN __jamTimerOff,2
000933 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x29:
                +
000934 e0ae     +LDI R26 , LOW ( __menitTimerOff + ( 2 ) )
000935 e0b0     +LDI R27 , HIGH ( __menitTimerOff + ( 2 ) )
                 	__POINTW2MN __menitTimerOff,2
000936 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
                +
000937 e0a3     +LDI R26 , LOW ( __jamTimerOn + ( 3 ) )
000938 e0b0     +LDI R27 , HIGH ( __jamTimerOn + ( 3 ) )
                 	__POINTW2MN __jamTimerOn,3
000939 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
                +
00093a e0a7     +LDI R26 , LOW ( __menitTimerOn + ( 3 ) )
00093b e0b0     +LDI R27 , HIGH ( __menitTimerOn + ( 3 ) )
                 	__POINTW2MN __menitTimerOn,3
00093c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
                +
00093d e0ab     +LDI R26 , LOW ( __jamTimerOff + ( 3 ) )
00093e e0b0     +LDI R27 , HIGH ( __jamTimerOff + ( 3 ) )
                 	__POINTW2MN __jamTimerOff,3
00093f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
000940 e0af     +LDI R26 , LOW ( __menitTimerOff + ( 3 ) )
000941 e0b0     +LDI R27 , HIGH ( __menitTimerOff + ( 3 ) )
                 	__POINTW2MN __menitTimerOff,3
000942 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2E:
000943 e0e0      	LDI  R30,LOW(0)
000944 93ea      	ST   -Y,R30
000945 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x2F:
000946 dfb4      	RCALL SUBOPT_0x1B
000947 d148      	RCALL __EEPROMRDB
000948 93e0 01f0 	STS  _jamTimerOn,R30
00094a dfb3      	RCALL SUBOPT_0x1C
00094b d144      	RCALL __EEPROMRDB
00094c 93e0 01f4 	STS  _menitTimerOn,R30
00094e dfca      	RCALL SUBOPT_0x20
00094f d140      	RCALL __EEPROMRDB
000950 93e0 01f8 	STS  _jamTimerOff,R30
000952 dfc9      	RCALL SUBOPT_0x21
000953 d13c      	RCALL __EEPROMRDB
000954 93e0 01fc 	STS  _menitTimerOff,R30
000956 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x30:
000957 d138      	RCALL __EEPROMRDB
                +
000958 93e0 01f1+STS _jamTimerOn + ( 1 ) , R30
                 	__PUTB1MN _jamTimerOn,1
00095a cfc7      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x31:
00095b d134      	RCALL __EEPROMRDB
                +
00095c 93e0 01f5+STS _menitTimerOn + ( 1 ) , R30
                 	__PUTB1MN _menitTimerOn,1
00095e cfc6      	RJMP SUBOPT_0x24
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x32:
00095f d130      	RCALL __EEPROMRDB
                +
000960 93e0 01f9+STS _jamTimerOff + ( 1 ) , R30
                 	__PUTB1MN _jamTimerOff,1
000962 cfc5      	RJMP SUBOPT_0x25
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x33:
000963 d12c      	RCALL __EEPROMRDB
                +
000964 93e0 01fd+STS _menitTimerOff + ( 1 ) , R30
                 	__PUTB1MN _menitTimerOff,1
000966 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x34:
000967 d128      	RCALL __EEPROMRDB
                +
000968 93e0 01f2+STS _jamTimerOn + ( 2 ) , R30
                 	__PUTB1MN _jamTimerOn,2
00096a cfc3      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x35:
00096b d124      	RCALL __EEPROMRDB
                +
00096c 93e0 01f6+STS _menitTimerOn + ( 2 ) , R30
                 	__PUTB1MN _menitTimerOn,2
00096e cfc2      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x36:
00096f d120      	RCALL __EEPROMRDB
                +
000970 93e0 01fa+STS _jamTimerOff + ( 2 ) , R30
                 	__PUTB1MN _jamTimerOff,2
000972 cfc1      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37:
000973 d11c      	RCALL __EEPROMRDB
                +
000974 93e0 01fe+STS _menitTimerOff + ( 2 ) , R30
                 	__PUTB1MN _menitTimerOff,2
000976 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
000977 d118      	RCALL __EEPROMRDB
                +
000978 93e0 01f3+STS _jamTimerOn + ( 3 ) , R30
                 	__PUTB1MN _jamTimerOn,3
00097a cfbf      	RJMP SUBOPT_0x2B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x39:
00097b d114      	RCALL __EEPROMRDB
                +
00097c 93e0 01f7+STS _menitTimerOn + ( 3 ) , R30
                 	__PUTB1MN _menitTimerOn,3
00097e cfbe      	RJMP SUBOPT_0x2C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3A:
00097f d110      	RCALL __EEPROMRDB
                +
000980 93e0 01fb+STS _jamTimerOff + ( 3 ) , R30
                 	__PUTB1MN _jamTimerOff,3
000982 cfbd      	RJMP SUBOPT_0x2D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B:
000983 d10c      	RCALL __EEPROMRDB
                +
000984 93e0 01ff+STS _menitTimerOff + ( 3 ) , R30
                 	__PUTB1MN _menitTimerOff,3
000986 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3C:
000987 e1e0      	LDI  R30,LOW(_bufferLcd1)
000988 e0f2      	LDI  R31,HIGH(_bufferLcd1)
000989 cef3      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x3D:
00098a 27ff      	CLR  R31
00098b 2766      	CLR  R22
00098c 2777      	CLR  R23
00098d d0fd      	RCALL __PUTPARD1
00098e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3E:
00098f e088      	LDI  R24,8
000990 dc59      	RCALL _sprintf
000991 962c      	ADIW R28,12
000992 e2e0      	LDI  R30,LOW(_bufferLcd2)
000993 e0f2      	LDI  R31,HIGH(_bufferLcd2)
000994 cee8      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F:
000995 e0e1      	LDI  R30,LOW(1)
000996 93ea      	ST   -Y,R30
000997 de3f      	RCALL _lcd_gotoxy
000998 e2e0      	LDI  R30,LOW(_bufferLcd2)
000999 e0f2      	LDI  R31,HIGH(_bufferLcd2)
00099a cf1c      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
00099b e08c      	LDI  R24,12
00099c dc4d      	RCALL _sprintf
00099d 9660      	ADIW R28,16
00099e cfa4      	RJMP SUBOPT_0x2E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x41:
00099f 81aa      	LDD  R26,Y+2
0009a0 81bb      	LDD  R27,Y+2+1
0009a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
0009a2 d0e0      	RCALL __GETW1P
0009a3 9730      	SBIW R30,0
0009a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x43:
0009a5 9614      	ADIW R26,4
0009a6 d0dc      	RCALL __GETW1P
0009a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x44:
0009a8 91ed      	LD   R30,X+
0009a9 91fd      	LD   R31,X+
0009aa 9631      	ADIW R30,1
0009ab 93fe      	ST   -X,R31
0009ac 93ee      	ST   -X,R30
0009ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x45:
0009ae efef      	LDI  R30,LOW(65535)
0009af efff      	LDI  R31,HIGH(65535)
0009b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x46:
0009b1 932a      	ST   -Y,R18
0009b2 85ed      	LDD  R30,Y+13
0009b3 85fe      	LDD  R31,Y+13+1
0009b4 dec8      	RCALL SUBOPT_0x0
0009b5 89e9      	LDD  R30,Y+17
0009b6 89fa      	LDD  R31,Y+17+1
0009b7 9509      	ICALL
0009b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x47:
0009b9 89e8      	LDD  R30,Y+16
0009ba 89f9      	LDD  R31,Y+16+1
0009bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x48:
0009bc 9734      	SBIW R30,4
0009bd 8be8      	STD  Y+16,R30
0009be 8bf9      	STD  Y+16+1,R31
0009bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x49:
0009c0 85ed      	LDD  R30,Y+13
0009c1 85fe      	LDD  R31,Y+13+1
0009c2 deba      	RCALL SUBOPT_0x0
0009c3 89e9      	LDD  R30,Y+17
0009c4 89fa      	LDD  R31,Y+17+1
0009c5 9509      	ICALL
0009c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
0009c7 dff1      	RCALL SUBOPT_0x47
0009c8 cff3      	RJMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4B:
0009c9 89a8      	LDD  R26,Y+16
0009ca 89b9      	LDD  R27,Y+16+1
0009cb cfd9      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4C:
0009cc 83ee      	STD  Y+6,R30
0009cd 83ff      	STD  Y+6+1,R31
0009ce ceae      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4D:
0009cf 83ee      	STD  Y+6,R30
0009d0 83ff      	STD  Y+6+1,R31
0009d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4E:
0009d2 87ea      	STD  Y+10,R30
0009d3 87fb      	STD  Y+10+1,R31
0009d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4F:
0009d5 81ae      	LDD  R26,Y+6
0009d6 81bf      	LDD  R27,Y+6+1
0009d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x50:
0009d8 d09a      	RCALL __ADDW2R15
0009d9 d0a9      	RCALL __GETW1P
0009da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
0009db e0e0      	LDI  R30,LOW(0)
0009dc 93ec      	ST   X,R30
0009dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x52:
0009de 81a9      	LDD  R26,Y+1
0009df 81ba      	LDD  R27,Y+1+1
0009e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x53:
0009e1 933a      	ST   -Y,R19
0009e2 de61      	RCALL _isspace
0009e3 30e0      	CPI  R30,0
0009e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x54:
0009e5 85ab      	LDD  R26,Y+11
0009e6 85bc      	LDD  R27,Y+11+1
0009e7 91ac      	LD   R26,X
0009e8 30a0      	CPI  R26,0
0009e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x55:
0009ea 85ef      	LDD  R30,Y+15
0009eb 89f8      	LDD  R31,Y+15+1
0009ec 9734      	SBIW R30,4
0009ed 87ef      	STD  Y+15,R30
0009ee 8bf8      	STD  Y+15+1,R31
0009ef 85af      	LDD  R26,Y+15
0009f0 89b8      	LDD  R27,Y+15+1
0009f1 9614      	ADIW R26,4
0009f2 910d      	LD   R16,X+
0009f3 911c      	LD   R17,X
0009f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x56:
0009f5 e0f0      	LDI  R31,0
0009f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x57:
0009f7 d022      	RCALL _i2c_start
0009f8 ede0      	LDI  R30,LOW(208)
0009f9 93ea      	ST   -Y,R30
0009fa c053      	RJMP _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x58:
0009fb 93ea      	ST   -Y,R30
0009fc c051      	RJMP _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x59:
0009fd d02b      	RCALL _i2c_stop
0009fe d01b      	RCALL _i2c_start
0009ff ede1      	LDI  R30,LOW(209)
000a00 cffa      	RJMP SUBOPT_0x58
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5A:
000a01 e0e1      	LDI  R30,LOW(1)
000a02 93ea      	ST   -Y,R30
000a03 d02f      	RCALL _i2c_read
000a04 93ea      	ST   -Y,R30
000a05 ce6b      	RJMP _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5B:
000a06 93ea      	ST   -Y,R30
000a07 cd9f      	RJMP __lcd_write_nibble_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5C:
000a08 93ea      	ST   -Y,R30
000a09 cdc1      	RJMP __lcd_write_data
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5D:
                +
000a0a e980     +LDI R24 , LOW ( 400 )
000a0b e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000a0c 9701     +SBIW R24 , 1
000a0d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000a0e e3e0      	LDI  R30,LOW(48)
000a0f cff6      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5E:
                +
000a10 e980     +LDI R24 , LOW ( 400 )
000a11 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000a12 9701     +SBIW R24 , 1
000a13 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000a14 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 _i2c_init:
000a15 98a8      	cbi  __i2c_port,__scl_bit
000a16 98a9      	cbi  __i2c_port,__sda_bit
000a17 9aa0      	sbi  __i2c_dir,__scl_bit
000a18 98a1      	cbi  __i2c_dir,__sda_bit
000a19 c015      	rjmp __i2c_delay2
                 _i2c_start:
000a1a 98a1      	cbi  __i2c_dir,__sda_bit
000a1b 98a0      	cbi  __i2c_dir,__scl_bit
000a1c 27ee      	clr  r30
000a1d 0000      	nop
000a1e 9b99      	sbis __i2c_pin,__sda_bit
000a1f 9508      	ret
000a20 9b98      	sbis __i2c_pin,__scl_bit
000a21 9508      	ret
000a22 d004      	rcall __i2c_delay1
000a23 9aa1      	sbi  __i2c_dir,__sda_bit
000a24 d002      	rcall __i2c_delay1
000a25 9aa0      	sbi  __i2c_dir,__scl_bit
000a26 e0e1      	ldi  r30,1
                 __i2c_delay1:
000a27 e16b      	ldi  r22,27
000a28 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
000a29 9aa1      	sbi  __i2c_dir,__sda_bit
000a2a 9aa0      	sbi  __i2c_dir,__scl_bit
000a2b d003      	rcall __i2c_delay2
000a2c 98a0      	cbi  __i2c_dir,__scl_bit
000a2d dff9      	rcall __i2c_delay1
000a2e 98a1      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
000a2f e365      	ldi  r22,53
                 __i2c_delay2l:
000a30 956a      	dec  r22
000a31 f7f1      	brne __i2c_delay2l
000a32 9508      	ret
                 _i2c_read:
000a33 e078      	ldi  r23,8
                 __i2c_read0:
000a34 98a0      	cbi  __i2c_dir,__scl_bit
000a35 dff1      	rcall __i2c_delay1
                 __i2c_read3:
000a36 9b98      	sbis __i2c_pin,__scl_bit
000a37 cffe      	rjmp __i2c_read3
000a38 dfee      	rcall __i2c_delay1
000a39 9488      	clc
000a3a 9999      	sbic __i2c_pin,__sda_bit
000a3b 9408      	sec
000a3c 9aa0      	sbi  __i2c_dir,__scl_bit
000a3d dff1      	rcall __i2c_delay2
000a3e 1fee      	rol  r30
000a3f 957a      	dec  r23
000a40 f799      	brne __i2c_read0
000a41 9179      	ld   r23,y+
000a42 2377      	tst  r23
000a43 f411      	brne __i2c_read1
000a44 98a1      	cbi  __i2c_dir,__sda_bit
000a45 c001      	rjmp __i2c_read2
                 __i2c_read1:
000a46 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
000a47 dfdf      	rcall __i2c_delay1
000a48 98a0      	cbi  __i2c_dir,__scl_bit
000a49 dfe5      	rcall __i2c_delay2
000a4a 9aa0      	sbi  __i2c_dir,__scl_bit
000a4b dfdb      	rcall __i2c_delay1
000a4c 98a1      	cbi  __i2c_dir,__sda_bit
000a4d cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
000a4e 91e9      	ld   r30,y+
000a4f e078      	ldi  r23,8
                 __i2c_write0:
000a50 0fee      	lsl  r30
000a51 f410      	brcc __i2c_write1
000a52 98a1      	cbi  __i2c_dir,__sda_bit
000a53 c001      	rjmp __i2c_write2
                 __i2c_write1:
000a54 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
000a55 dfd9      	rcall __i2c_delay2
000a56 98a0      	cbi  __i2c_dir,__scl_bit
000a57 dfcf      	rcall __i2c_delay1
                 __i2c_write3:
000a58 9b98      	sbis __i2c_pin,__scl_bit
000a59 cffe      	rjmp __i2c_write3
000a5a dfcc      	rcall __i2c_delay1
000a5b 9aa0      	sbi  __i2c_dir,__scl_bit
000a5c 957a      	dec  r23
000a5d f791      	brne __i2c_write0
000a5e 98a1      	cbi  __i2c_dir,__sda_bit
000a5f dfc7      	rcall __i2c_delay1
000a60 98a0      	cbi  __i2c_dir,__scl_bit
000a61 dfcd      	rcall __i2c_delay2
000a62 e0e1      	ldi  r30,1
000a63 9999      	sbic __i2c_pin,__sda_bit
000a64 27ee      	clr  r30
000a65 9aa0      	sbi  __i2c_dir,__scl_bit
000a66 cfc0      	rjmp __i2c_delay1
                 
                 _delay_ms:
000a67 91e9      	ld   r30,y+
000a68 91f9      	ld   r31,y+
000a69 9630      	adiw r30,0
000a6a f039      	breq __delay_ms1
                 __delay_ms0:
                +
000a6b ea80     +LDI R24 , LOW ( 0xFA0 )
000a6c e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
000a6d 9701     +SBIW R24 , 1
000a6e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000a6f 95a8      	wdr
000a70 9731      	sbiw r30,1
000a71 f7c9      	brne __delay_ms0
                 __delay_ms1:
000a72 9508      	ret
                 
                 __ADDW2R15:
000a73 2400      	CLR  R0
000a74 0daf      	ADD  R26,R15
000a75 1db0      	ADC  R27,R0
000a76 9508      	RET
                 
                 __ANEGW1:
000a77 95f1      	NEG  R31
000a78 95e1      	NEG  R30
000a79 40f0      	SBCI R31,0
000a7a 9508      	RET
                 
                 __MULW12U:
000a7b 9ffa      	MUL  R31,R26
000a7c 2df0      	MOV  R31,R0
000a7d 9feb      	MUL  R30,R27
000a7e 0df0      	ADD  R31,R0
000a7f 9fea      	MUL  R30,R26
000a80 2de0      	MOV  R30,R0
000a81 0df1      	ADD  R31,R1
000a82 9508      	RET
                 
                 __GETW1P:
000a83 91ed      	LD   R30,X+
000a84 91fc      	LD   R31,X
000a85 9711      	SBIW R26,1
000a86 9508      	RET
                 
                 __GETW1PF:
000a87 9005      	LPM  R0,Z+
000a88 91f4      	LPM  R31,Z
000a89 2de0      	MOV  R30,R0
000a8a 9508      	RET
                 
                 __PUTPARD1:
000a8b 937a      	ST   -Y,R23
000a8c 936a      	ST   -Y,R22
000a8d 93fa      	ST   -Y,R31
000a8e 93ea      	ST   -Y,R30
000a8f 9508      	RET
                 
                 __EEPROMRDB:
000a90 99e1      	SBIC EECR,EEWE
000a91 cffe      	RJMP __EEPROMRDB
000a92 93ff      	PUSH R31
000a93 b7ff      	IN   R31,SREG
000a94 94f8      	CLI
000a95 bbae      	OUT  EEARL,R26
000a96 bbbf      	OUT  EEARH,R27
000a97 9ae0      	SBI  EECR,EERE
000a98 b3ed      	IN   R30,EEDR
000a99 bfff      	OUT  SREG,R31
000a9a 91ff      	POP  R31
000a9b 9508      	RET
                 
                 __EEPROMWRB:
000a9c 9be1      	SBIS EECR,EEWE
000a9d c002      	RJMP __EEPROMWRB1
000a9e 95a8      	WDR
000a9f cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000aa0 b79f      	IN   R25,SREG
000aa1 94f8      	CLI
000aa2 bbae      	OUT  EEARL,R26
000aa3 bbbf      	OUT  EEARH,R27
000aa4 9ae0      	SBI  EECR,EERE
000aa5 b38d      	IN   R24,EEDR
000aa6 17e8      	CP   R30,R24
000aa7 f019      	BREQ __EEPROMWRB0
000aa8 bbed      	OUT  EEDR,R30
000aa9 9ae2      	SBI  EECR,EEMWE
000aaa 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000aab bf9f      	OUT  SREG,R25
000aac 9508      	RET
                 
                 __SAVELOCR6:
000aad 935a      	ST   -Y,R21
                 __SAVELOCR5:
000aae 934a      	ST   -Y,R20
                 __SAVELOCR4:
000aaf 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ab0 932a      	ST   -Y,R18
                 __SAVELOCR2:
000ab1 931a      	ST   -Y,R17
000ab2 930a      	ST   -Y,R16
000ab3 9508      	RET
                 
                 __LOADLOCR6:
000ab4 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000ab5 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000ab6 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ab7 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000ab8 8119      	LDD  R17,Y+1
000ab9 8108      	LD   R16,Y
000aba 9508      	RET
                 
                 __LOADLOCR2P:
000abb 9109      	LD   R16,Y+
000abc 9119      	LD   R17,Y+
000abd 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8535 register use summary:
r0 :  15 r1 :   2 r2 :   0 r3 :   0 r4 :   9 r5 :   9 r6 :   0 r7 :   1 
r8 :   1 r9 :   1 r10:   4 r11:   1 r12:   2 r13:   4 r14:   0 r15:  18 
r16:  45 r17:  58 r18:  36 r19:  34 r20:  25 r21:  27 r22:  11 r23:  10 
r24:  29 r25:   8 r26: 169 r27:  51 r28:  42 r29:   1 r30: 559 r31: 169 
x  :  36 y  : 246 z  :  21 
Registers used: 31 out of 35 (88.6%)

ATmega8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :  11 
adiw  :  50 and   :   0 andi  :  12 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   4 break :   0 breq  :  64 
brge  :  11 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  16 
brlt  :   0 brmi  :   1 brne  :  74 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  32 
cbr   :   0 clc   :   1 clh   :   0 cli   :   3 cln   :   0 clr   :  22 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :  22 
cpc   :   4 cpi   :  92 cpse  :   0 dec   :   7 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :  16 
inc   :   2 ld    :  46 ldd   : 115 ldi   : 324 lds   :  53 lpm   :  17 
lsl   :   4 lsr   :   0 mov   :  46 movw  :  33 mul   :   5 muls  :   0 
mulsu :   0 neg   :   2 nop   :   1 or    :   0 ori   :   8 out   :  50 
pop   :  13 push  :  16 rcall : 631 ret   :  89 reti  :   0 rjmp  : 247 
rol   :   1 ror   :   0 sbc   :   1 sbci  :   4 sbi   :  32 sbic  :  27 
sbis  :   5 sbiw  :  27 sbr   :   0 sbrc  :   4 sbrs  :  10 sec   :   1 
seh   :   0 sei   :   0 sen   :   0 ser   :   1 ses   :   0 set   :   1 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  79 std   :  49 
sts   :  18 sub   :   1 subi  :  42 swap  :   2 tst   :   5 wdr   :   2 

Instructions used: 63 out of 114 (55.3%)

ATmega8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00157c   5070    430   5500    8192  67.1%
[.dseg] 0x000060 0x000234      0    340    340     607  56.0%
[.eseg] 0x000000 0x000010      0     16     16     512   3.1%

Assembly complete, 0 errors, 10 warnings
